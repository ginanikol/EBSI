import { JWK } from "jose";
export declare function encryptSecp256k1(payload: {
    [x: string]: unknown;
}, publicKeyHex: string): string;
export declare function decryptSecp256k1(privateKey: string, encrypted: string): string;
export declare function getPublicKeyJwk(jwk: JWK, alg: string): JWK;
export declare const encode: {
    publicKey: {
        fromJWKToHex: (keyJwk: JWK) => string;
        fromHexToJWK: (keyHex: string) => JWK;
        fromJWKToPEM: (keyJwk: JWK) => string;
        readonly fromJWKtoHex: (keyJwk: JWK) => string;
        readonly fromHextoJWK: (keyHex: string) => JWK;
        readonly fromJWKtoPEM: (keyJwk: JWK) => string;
    };
    privateKey: {
        fromJWKToHex: (keyJwk: JWK) => string;
        fromHexToJWK: (keyHex: string) => JWK;
        readonly fromJWKtoHex: (keyJwk: JWK) => string;
        readonly fromHextoJWK: (keyHex: string) => JWK;
    };
};
//# sourceMappingURL=utils.d.ts.map