import type { DIDDocument } from "did-resolver";
import { JWTVerifyResult } from "jose";
export declare function getErrorMessage(error: unknown): string;
export declare function getGenericName(appName: string): string;
export declare function checkAuthorization(resourceNodeApp: string, requesterNodeApp: string, opts: {
    trustedAppsRegistry: string;
    timeout?: number;
}): Promise<void>;
export declare function getApp(kid: string, opts?: {
    timeout?: number;
}): Promise<{
    name: string;
    publicKeys: string[];
    revocation: {
        revokedBy: string;
        notBefore: number;
    } | null;
}>;
export declare function verifyJwtTar(jwt: string, opts: {
    trustedAppsRegistry: string;
    audience?: string;
    timeout?: number;
}): Promise<JWTVerifyResult>;
export declare function verifyJwtDid(jwt: string, opts: {
    didRegistry?: string;
    timeout?: number;
}): Promise<{
    result: JWTVerifyResult;
    didDocument: DIDDocument;
}>;
//# sourceMappingURL=verifier.d.ts.map