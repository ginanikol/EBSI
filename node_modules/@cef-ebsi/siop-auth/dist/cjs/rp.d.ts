import { KeyLike } from "jose";
import type { RequestPayload, Ake1SigPayload, ResponseClaims, VerifyResponseResult, ResultProcessClaims } from "./types.js";
export declare class RP {
    #private;
    alg: string;
    name: string;
    kid: string;
    redirectUri: string;
    constructor(opts?: {
        privateKey?: KeyLike | Uint8Array;
        alg?: string;
        name?: string;
        kid?: string;
        redirectUri?: string;
        didRegistry?: string;
    });
    createRequest(requestPayload: RequestPayload): Promise<string>;
    static verifyResponse(jwt: string, processClaims: (claims?: ResponseClaims) => Promise<ResultProcessClaims>): Promise<VerifyResponseResult>;
    createAccessToken(resultVerification: VerifyResponseResult, payloadToken?: {
        [x: string]: unknown;
    }): Promise<{
        ake1_enc_payload: string;
        ake1_sig_payload: Ake1SigPayload;
        ake1_jws_detached: string;
        kid: string;
    }>;
}
//# sourceMappingURL=rp.d.ts.map