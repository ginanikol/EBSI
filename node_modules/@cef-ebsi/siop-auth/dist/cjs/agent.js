"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var _Agent_privateKey;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Agent = void 0;
const jose_1 = require("jose");
const ebsi_did_resolver_1 = require("@cef-ebsi/ebsi-did-resolver");
const key_did_resolver_1 = require("@cef-ebsi/key-did-resolver");
const utils_js_1 = require("./utils.js");
const constants_js_1 = require("./constants.js");
const verifier_js_1 = require("./verifier.js");
class Agent {
    constructor(opts = {}) {
        var _a, _b, _c, _d;
        _Agent_privateKey.set(this, void 0);
        __classPrivateFieldSet(this, _Agent_privateKey, (_a = opts.privateKey) !== null && _a !== void 0 ? _a : new Uint8Array(), "f");
        this.alg = (_b = opts.alg) !== null && _b !== void 0 ? _b : "";
        this.kid = (_c = opts.kid) !== null && _c !== void 0 ? _c : "";
        this.did = this.kid.slice(0, this.kid.indexOf("#"));
        this.siopV2 = (_d = opts.siopV2) !== null && _d !== void 0 ? _d : true;
        this.isDidV2 =
            this.did.startsWith(key_did_resolver_1.KEY_DID_METHOD_PREFIX) || (0, ebsi_did_resolver_1.validate)(this.did) === 2;
    }
    createResponse(responsePayload, options = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            const { responseMode = "fragment", syntaxType = "jwk_thumbprint_subject" } = options;
            const { redirectUri } = responsePayload, extraPayload = __rest(responsePayload, ["redirectUri"]);
            const privateKeyJwk = yield (0, jose_1.exportJWK)(__classPrivateFieldGet(this, _Agent_privateKey, "f"));
            const publicKeyJwk = (0, utils_js_1.getPublicKeyJwk)(privateKeyJwk, this.alg);
            const payload = Object.assign(Object.assign(Object.assign(Object.assign({ aud: redirectUri }, (syntaxType === "jwk_thumbprint_subject" && {
                sub: yield (0, jose_1.calculateJwkThumbprint)(publicKeyJwk),
                sub_jwk: publicKeyJwk,
            })), (syntaxType === "did_subject" && { sub: this.did })), (!this.siopV2 && { did: this.did })), extraPayload);
            const issuer = this.siopV2
                ? "https://self-issued.me/v2"
                : "https://self-issued.me";
            const jwt = yield new jose_1.SignJWT(payload)
                .setProtectedHeader(Object.assign({ alg: this.alg, typ: "JWT", kid: this.kid }, (this.isDidV2 &&
                syntaxType === "did_subject" && { jwk: publicKeyJwk })))
                .setIssuedAt()
                .setIssuer(issuer)
                .setExpirationTime(constants_js_1.expiration.response)
                .sign(__classPrivateFieldGet(this, _Agent_privateKey, "f"));
            const urlParams = new URLSearchParams({
                id_token: jwt,
            }).toString();
            switch (responseMode) {
                case "post":
                case "form_post":
                    return {
                        encoding: "application/x-www-form-urlencoded",
                        urlEncoded: encodeURI(redirectUri),
                        responseMode,
                        bodyEncoded: urlParams,
                        idToken: jwt,
                    };
                case "query":
                    return {
                        encoding: "application/x-www-form-urlencoded",
                        urlEncoded: encodeURI(`${redirectUri}?${urlParams}`),
                        responseMode,
                        idToken: jwt,
                    };
                case "fragment":
                    return {
                        encoding: "application/x-www-form-urlencoded",
                        urlEncoded: encodeURI(`${redirectUri}#${urlParams}`),
                        responseMode,
                        idToken: jwt,
                    };
                default:
                    throw new Error("invalid response mode");
            }
        });
    }
    static verifyAkeResponse(response, opts) {
        return __awaiter(this, void 0, void 0, function* () {
            const { ake1_enc_payload: ake1EncPayload } = response;
            let ake1DecPayload;
            if (opts.alg === "ES256K") {
                const privateEncryptionKeyHex = utils_js_1.encode.privateKey.fromJWKToHex(opts.privateEncryptionKeyJwk);
                ake1DecPayload = JSON.parse((0, utils_js_1.decryptSecp256k1)(privateEncryptionKeyHex, ake1EncPayload));
            }
            else {
                const privateEncryptionKey = yield (0, jose_1.importJWK)(opts.privateEncryptionKeyJwk, opts.alg);
                ake1DecPayload = (yield (0, jose_1.jwtDecrypt)(ake1EncPayload, privateEncryptionKey))
                    .payload;
            }
            const { kid, nonce, access_token: accessToken } = ake1DecPayload;
            if (typeof kid !== "string" ||
                typeof accessToken !== "string" ||
                typeof nonce !== "string") {
                throw new Error(`invalid decrypted payload. Received: ${JSON.stringify(ake1DecPayload)}`);
            }
            if (nonce !== opts.nonce) {
                throw new Error(`Expected nonce ${opts.nonce}. Received ${nonce}`);
            }
            yield (0, verifier_js_1.verifyJwtTar)(accessToken, {
                trustedAppsRegistry: opts.trustedAppsRegistry,
                audience: opts.audience || "ebsi-core-services",
                timeout: opts.timeout,
            });
            return accessToken;
        });
    }
}
exports.Agent = Agent;
_Agent_privateKey = new WeakMap();
//# sourceMappingURL=agent.js.map