"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDid = void 0;
const base58_1 = require("multiformats/bases/base58");
const constants_1 = require("./constants");
/**
 * Generic function to create a `did:ebsi:` DID based on the provided subject identifier (bytes).
 *
 * @param subjectIdentifierBytes - The method subject identifier (bytes).
 * @param version - Either "LEGAL_ENTITY" (default) or "NATURAL_PERSON"
 * @returns The did:ebsi DID.
 */
function createDid(subjectIdentifierBytes, version = constants_1.LEGAL_ENTITY) {
    // Define bytes array size
    const bytesArray = new Uint8Array(1 + constants_1.EBSI_DID_SPECS[version].BYTE_LENGTH);
    // Set version number
    bytesArray.set([constants_1.EBSI_DID_SPECS[version].VERSION_ID]);
    if (subjectIdentifierBytes.length !== constants_1.EBSI_DID_SPECS[version].BYTE_LENGTH) {
        throw new Error(`Invalid subject identifier length. Expected: ${constants_1.EBSI_DID_SPECS[version].BYTE_LENGTH} bytes. Received: ${subjectIdentifierBytes.length} bytes.`);
    }
    bytesArray.set(subjectIdentifierBytes, 1);
    // Encode method specific identifier
    const methodSpecificIdentifier = base58_1.base58btc.encode(bytesArray);
    return `${constants_1.EBSI_DID_METHOD_PREFIX}${methodSpecificIdentifier}`;
}
exports.createDid = createDid;
exports.default = createDid;
//# sourceMappingURL=util.js.map