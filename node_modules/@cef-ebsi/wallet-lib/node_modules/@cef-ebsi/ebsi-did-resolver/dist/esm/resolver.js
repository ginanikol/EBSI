import { DID_RESOLUTION_ERROR_CODES } from "./constants.js";
import { resolve as resolveV1 } from "./resolvers/v1.js";
import { validate } from "./validator.js";
export function getResolver(resolverOptions) {
    async function resolve(did, _, __, didResolutionOptions) {
        if (!resolverOptions || typeof resolverOptions !== "object") {
            return {
                didDocument: null,
                didDocumentMetadata: {},
                didResolutionMetadata: {
                    error: DID_RESOLUTION_ERROR_CODES.CONFIGURATION_ERROR,
                    message: "Invalid or missing resolver options",
                },
            };
        }
        try {
            validate(did);
        }
        catch (e) {
            const message = e instanceof Error ? e.message : "Unknown error";
            return {
                didDocument: null,
                didDocumentMetadata: {},
                didResolutionMetadata: {
                    error: "invalidDid",
                    message,
                },
            };
        }
        return resolveV1(did, resolverOptions.registry, didResolutionOptions);
    }
    return { ebsi: resolve };
}
//# sourceMappingURL=resolver.js.map