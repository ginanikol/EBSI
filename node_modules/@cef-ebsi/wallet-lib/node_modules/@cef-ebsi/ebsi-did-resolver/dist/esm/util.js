import { base58btc } from "multiformats/bases/base58";
import { EBSI_DID_METHOD_PREFIX, EBSI_DID_SPECS, LEGAL_ENTITY, } from "./constants.js";
export function createDid(subjectIdentifierBytes, version = LEGAL_ENTITY) {
    const bytesArray = new Uint8Array(1 + EBSI_DID_SPECS[version].BYTE_LENGTH);
    bytesArray.set([EBSI_DID_SPECS[version].VERSION_ID]);
    if (subjectIdentifierBytes.length !== EBSI_DID_SPECS[version].BYTE_LENGTH) {
        throw new Error(`Invalid subject identifier length. Expected: ${EBSI_DID_SPECS[version].BYTE_LENGTH} bytes. Received: ${subjectIdentifierBytes.length} bytes.`);
    }
    bytesArray.set(subjectIdentifierBytes, 1);
    const methodSpecificIdentifier = base58btc.encode(bytesArray);
    return `${EBSI_DID_METHOD_PREFIX}${methodSpecificIdentifier}`;
}
//# sourceMappingURL=util.js.map