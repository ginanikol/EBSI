import jose from "jose";
declare class Session {
    appName: string;
    privateKey: jose.JWK.ECKey;
    tarProvider: string;
    didResolver: any;
    expiration: {
        requestToken: number;
        accessToken: number;
    };
    constructor(appName?: string, privateKey?: string | jose.JWK.ECKey, tarProvider?: string, didResolver?: any, expiration?: {
        requestToken: number;
        accessToken: number;
    });
    generateToken(opts?: {
        [key: string]: string | number;
    }): {
        accessToken: string;
        tokenType: string;
        expiresIn: number;
        issuedAt: number;
    };
    static checkBody(body: {
        grantType: string;
        assertion: string;
        scope?: string;
    }): string | undefined;
    newSession(body: {
        grantType: string;
        assertion: string;
        scope?: string;
    }, opts?: {
        [key: string]: string | number;
    }): Promise<{
        accessToken: string;
        tokenType: string;
        expiresIn: number;
        issuedAt: number;
    }>;
    verify(token: any): void;
}
export default Session;
//# sourceMappingURL=session.d.ts.map