/// <reference types="node" />
import type { JWTHeader, JWTPayload, JWTOptions } from "./types.js";
export declare function decode(token: string): {
    headers: JWTHeader;
    payload: JWTPayload;
};
export declare function checkHeaders(headers: JWTHeader): boolean;
export declare function checkAssertionTokenPayload(payload: JWTPayload): boolean;
export declare function checkAccessTokenPayload(payload: JWTPayload, opts?: JWTOptions): boolean;
export declare function checkHeadersPayload(token: string, options?: JWTOptions): {
    headers: JWTHeader;
    payload: JWTPayload;
    scope?: string;
};
export declare function encrypt(payload: {
    [x: string]: unknown;
}, publicKeyHex: string): string;
export declare function decrypt(privateKey: string, encrypted: string): string;
export declare function computeHash(payload: string): Buffer;
//# sourceMappingURL=utils.d.ts.map