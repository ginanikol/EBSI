"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Agent_privateKey;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Agent = void 0;
const uuid_1 = require("uuid");
const did_jwt_1 = require("did-jwt");
const base64_1 = require("multiformats/bases/base64");
const jose_1 = require("jose");
const index_js_1 = require("./errors/index.js");
const constants_js_1 = require("./constants.js");
const utils_js_1 = require("./utils.js");
const verifier_js_1 = require("./verifier.js");
class Agent {
    constructor(opts) {
        var _a;
        _Agent_privateKey.set(this, void 0);
        __classPrivateFieldSet(this, _Agent_privateKey, opts.privateKey, "f");
        this.name = opts.name;
        this.trustedAppsRegistry = opts.trustedAppsRegistry;
        this.expiration = (_a = opts.expiration) !== null && _a !== void 0 ? _a : constants_js_1.defaultExpiration;
        this.kid = `${this.trustedAppsRegistry}/${this.name}`;
    }
    createRequest(resourceApp, payload = {}) {
        return __awaiter(this, void 0, void 0, function* () {
            return {
                grantType: constants_js_1.GRANT_TYPE,
                clientAssertionType: constants_js_1.CLIENT_ASSERTION_TYPE,
                scope: constants_js_1.SCOPE,
                clientAssertion: yield (0, did_jwt_1.createJWT)(Object.assign({ jti: (0, uuid_1.v4)(), aud: resourceApp, sub: this.name }, payload), {
                    issuer: this.name,
                    signer: (0, did_jwt_1.ES256KSigner)(Buffer.from(__classPrivateFieldGet(this, _Agent_privateKey, "f").replace(/^0x/, ""), "hex")),
                    expiresIn: this.expiration.requestToken,
                }, {
                    typ: "JWT",
                    alg: "ES256K",
                    kid: this.kid,
                }),
            };
        });
    }
    verifyAkeResponse(response, opts) {
        return __awaiter(this, void 0, void 0, function* () {
            const { ake1_enc_payload: ake1EncPayload, ake1_sig_payload: ake1SigPayload, ake1_jws_detached: ake1JwsDetached, } = response;
            const ake1DecPayload = JSON.parse((0, utils_js_1.decrypt)(__classPrivateFieldGet(this, _Agent_privateKey, "f"), ake1EncPayload));
            const { kid, nonce, access_token: accessToken } = ake1DecPayload;
            if (typeof kid !== "string" ||
                typeof accessToken !== "string" ||
                typeof nonce !== "string") {
                throw new Error(`invalid decrypted payload. Received: ${JSON.stringify(ake1DecPayload)}`);
            }
            if (nonce !== opts.nonce) {
                throw new Error(`Expected nonce ${opts.nonce}. Received ${nonce}`);
            }
            const verification = yield (0, verifier_js_1.verifyJwtTar)(accessToken, {
                trustedAppsRegistry: this.trustedAppsRegistry,
                op: opts.op,
                timeout: opts.timeout,
            });
            const ake1SignPayload = ake1JwsDetached.replace("..", `.${base64_1.base64url.baseEncode(Buffer.from(JSON.stringify(ake1SigPayload)))}.`);
            try {
                yield (0, jose_1.jwtVerify)(ake1SignPayload, verification.publicKey);
            }
            catch (error) {
                throw new index_js_1.InvalidTokenError(`invalid detached signature: ${error.message}`);
            }
            return accessToken;
        });
    }
}
exports.Agent = Agent;
_Agent_privateKey = new WeakMap();
//# sourceMappingURL=agent.js.map