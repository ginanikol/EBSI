export interface Ake1SigPayload {
    ake1_enc_payload: string;
    ake1_nonce: string;
    kid?: string;
    iat: number;
    iss: string;
}
export interface AkeResponse {
    ake1_enc_payload: string;
    ake1_sig_payload: Ake1SigPayload;
    ake1_jws_detached: string;
    kid?: string;
}
export interface BodyRequest {
    grantType: string;
    clientAssertionType: string;
    clientAssertion: string;
    scope?: string;
}
export type Expiration = {
    requestToken: number;
    accessToken?: number;
};
export type JWTOptions = {
    scope?: string;
    audience?: string;
    expiration?: Expiration;
    tarProvider?: string;
    didResolver?: string;
};
export type JWTHeader = {
    typ?: string;
    alg?: string;
    kid?: string;
    [x: string]: unknown;
};
export type JWTPayload = {
    iss?: string;
    sub?: string;
    aud?: string;
    jti?: string;
    iat?: number;
    nbf?: number;
    type?: string;
    exp?: number;
    rexp?: number;
    [x: string]: unknown;
};
//# sourceMappingURL=types.d.ts.map