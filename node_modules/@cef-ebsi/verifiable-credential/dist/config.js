"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mergeConfig = void 0;
const errors_1 = require("./errors");
const validators_1 = require("./validators");
function mergeConfig(authority, customConfig, trustedHostnames) {
    let host = "";
    let hostname = "";
    try {
        const origin = `https://${authority}`;
        const verifiedUrl = new URL(origin);
        host = verifiedUrl.host;
        hostname = verifiedUrl.hostname;
    }
    catch (e) {
        throw new errors_1.ConfigurationError("Invalid EBSI authority provided");
    }
    try {
        (0, validators_1.validateHostname)(hostname, trustedHostnames);
    }
    catch (e) {
        throw new errors_1.ConfigurationError(`Invalid hostname ${hostname}`);
    }
    const defaultConfig = {
        didRegistry: `https://${host}/did-registry/v5/identifiers`,
        trustedIssuersRegistry: `https://${host}/trusted-issuers-registry/v5/issuers`,
        trustedPoliciesRegistry: `https://${host}/trusted-policies-registry/v3/users`,
    };
    return { ...defaultConfig, ...customConfig };
}
exports.mergeConfig = mergeConfig;
exports.default = mergeConfig;
//# sourceMappingURL=config.js.map