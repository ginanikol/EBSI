/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * Defines generic structure for any EBSI related Verifiable Credential
 */
export interface EBSIVerifiableAttestation {
    /**
     * Semantic context for the issued credential
     */
    "@context": string[];
    /**
     * Globally unique identifier for the issued credential
     */
    id: string;
    /**
     * Full type chain, used to identify the credential base types
     */
    type: string[];
    /**
     * DID which issued this credential
     */
    issuer: string;
    /**
     * Defines the date and time, when the issued credential becomes valid
     */
    issuanceDate: string;
    /**
     * Defines when the issued credential was issued
     */
    issued: string;
    /**
     * Defines the date and time, when the issued credential becomes valid
     */
    validFrom: string;
    /**
     * Defines the date and time, when the issued credential expires
     */
    validUntil?: string;
    /**
     * Defines the date and time, when the issued credential expires
     */
    expirationDate?: string;
    /**
     * Defines information about the subject that is defined by the type chain
     */
    credentialSubject: {
        /**
         * Defines the DID of the subject that is described by the issued credential
         */
        id?: string;
        [k: string]: unknown;
    };
    /**
     * Defines revocation details for the issued credential. Further redefined by type extension
     */
    credentialStatus?: {
        /**
         * Exact identity for the credential status
         */
        id: string;
        /**
         * Defines the revocation type extension
         */
        type: string;
        [k: string]: unknown;
    };
    credentialSchema: CredentialSchema | CredentialSchema[];
    termsOfUse?: TermsOfUse | TermsOfUse[];
    /**
     * Contains information about the process which resulted in the issuance of the credential
     */
    evidence?: {
        /**
         * If present, it MUST contain a URL that points to where more information about this instance of evidence can be found.
         */
        id?: string;
        /**
         * Defines the evidence type extension
         */
        type: string[];
        [k: string]: unknown;
    }[];
    /**
     * Contains information about the proof
     */
    proof?: {
        /**
         * Defines the proof type
         */
        type: string;
        /**
         * Defines the purpose of the proof
         */
        proofPurpose: string;
        /**
         * Defines the date and time, when the proof has been created
         */
        created: string;
        /**
         * Contains information about the verification method / proof mechanisms
         */
        verificationMethod: string;
        /**
         * Defines the proof value in JWS format
         */
        jws: string;
        [k: string]: unknown;
    };
    [k: string]: unknown;
}
/**
 * Contains information about the credential schema on which the issued credential is based
 */
export interface CredentialSchema {
    /**
     * References the credential schema stored on the Trusted Schemas Registry (TSR) on which the Verifiable Authorisation is based
     */
    id: string;
    /**
     * Defines credential schema type
     */
    type: "FullJsonSchemaValidator2021";
    [k: string]: unknown;
}
/**
 * Contains the terms under which the issued credential was issued
 */
export interface TermsOfUse {
    /**
     * Contains a URL that points to where more information about this instance of terms of use can be found.
     */
    id?: string;
    /**
     * Defines the type extension
     */
    type: string;
    [k: string]: unknown;
}
