"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const base64url_1 = __importDefault(require("base64url"));
const tweetnacl_ts_1 = require("tweetnacl-ts");
const utf8_1 = require("utf8");
const util_1 = require("../util");
class Ed25519Verifier {
    constructor() {
        this.algoName = "Ed25519";
    }
    verify(data, signature, authenticators) {
        const clear = Buffer.from(utf8_1.encode(data));
        const sig = util_1.base64ToBytes(base64url_1.default.toBase64(signature));
        const signer = authenticators.find(({ publicKeyBase64 }) => {
            if (!publicKeyBase64)
                throw new Error("No public key found.");
            return tweetnacl_ts_1.sign_detached_verify(clear, sig, util_1.base64ToBytes(publicKeyBase64));
        });
        if (!signer)
            throw new Error(`Signature ${this.algoName} invalid for JWT`);
        return signer;
    }
}
exports.default = Ed25519Verifier;
//# sourceMappingURL=Ed25519Verifier.js.map