import type { JWK } from "jose";
import * as jwkJcsPubCodec from "./codecs/jwk_jcs-pub.js";
import { KEY_DID_METHOD_PREFIX } from "./constants.js";
import { encodePublicKey, resolveDidDoc } from "./internals.js";

/**
 * Generic function to create a `did:key:` DID based on the provided public key JWK.
 *
 * @param publicKey - The raw public key, in the JWK format.
 * @returns The `did:key` DID corresponding to the JWK.
 */
export function createDid(publicKey: JWK): string {
  try {
    return `${KEY_DID_METHOD_PREFIX}${encodePublicKey(
      jwkJcsPubCodec.encode(publicKey),
      jwkJcsPubCodec.code,
    )}`;
  } catch (e) {
    throw new Error(e instanceof Error ? e.message : "Unknown error");
  }
}

/**
 * Asserts if the DID can be resolved.
 *
 * @param did - The DID to verify
 */
export function validateDid(did: string) {
  resolveDidDoc(did);
}
