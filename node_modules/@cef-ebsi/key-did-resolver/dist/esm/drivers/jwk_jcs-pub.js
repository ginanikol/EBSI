import * as codec from "../codecs/jwk_jcs-pub.js";
import { DID_LD_JSON, KEY_DID_METHOD_PREFIX } from "../constants.js";
import { InvalidDidError } from "../errors/index.js";
export function pubKeyBytesToDidDoc(pubKeyBytes, identifier, contentType) {
    const did = `${KEY_DID_METHOD_PREFIX}${identifier}`;
    const keyId = `${did}#${identifier}`;
    let publicKeyJwk;
    try {
        publicKeyJwk = codec.decode(pubKeyBytes);
    }
    catch (e) {
        throw new InvalidDidError(e instanceof Error ? e.message : "Unknown error");
    }
    return {
        ...(contentType === DID_LD_JSON && {
            "@context": [
                "https://www.w3.org/ns/did/v1",
                "https://w3id.org/security/suites/jws-2020/v1",
            ],
        }),
        id: did,
        verificationMethod: [
            {
                id: keyId,
                type: "JsonWebKey2020",
                controller: did,
                publicKeyJwk,
            },
        ],
        authentication: [keyId],
        assertionMethod: [keyId],
        capabilityInvocation: [keyId],
        capabilityDelegation: [keyId],
    };
}
//# sourceMappingURL=jwk_jcs-pub.js.map