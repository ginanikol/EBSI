{"version":3,"file":"vc.js.cjs.development.js","sources":["../src/checkCredential/checkDate.ts","../src/checkCredential/index.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/vc-ld/CredentialIssuancePurpose.ts","../src/vc-ld/createVerifiableCredential.ts","../src/vc-ld/verifyVerifiableCredential.ts","../src/checkPresentation.ts","../src/vc-ld/createVerifiablePresentation.ts","../src/vc-jwt/getVerifierForJwt.ts","../src/vc-jwt/decodeJwt.ts","../src/vc-jwt/verifyVerifiableCredential.ts","../src/vc-ld/verifyVerifiablePresentation.ts","../src/vc-jwt/createVcPayload.ts","../src/vc-jwt/createVerifiableCredential.ts","../src/vc-jwt/createVpPayload.ts","../src/vc-jwt/createVerifiablePresentation.ts","../src/vc-jwt/verifyVerifiablePresentation.ts","../src/universal/credential/create.ts","../src/universal/credential/derive.ts","../src/universal/credential/verify.ts","../src/universal/credential/index.ts","../src/universal/presentation/create.ts","../src/universal/presentation/verify.ts","../src/universal/presentation/index.ts","../src/universal/index.ts"],"sourcesContent":["import moment from \"moment\";\n\n// https://www.w3.org/TR/xmlschema11-2/#dateTime\n// Modified for leap seconds\nconst xmlDateSchemaRegex = /-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T(([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?/;\n\n// Modified for leap seconds\nexport const ISO_8601_FULL = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5][0-9]([\\.,]\\d+)?|:60([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n\nexport const TIME_ZONE_OFFSET_MATCH = /[+-]\\d\\d:\\d\\d$/;\n\n// for the sake of safety, we check the date\n// against ISO 8601 and moment.\n// see also: https://github.com/w3c/vc-data-model/issues/782\nexport const checkDate = (\n  datetime: string,\n  isJWT: boolean = false\n): { valid: boolean; warnings: string[] } => {\n  const res: { valid: boolean; warnings: string[] } = {\n    valid: false,\n    warnings: []\n  };\n  // open source vc, make sure validation tests date strings are the right format for the date\n  if (!ISO_8601_FULL.test(datetime)) {\n    res.warnings.push(`${datetime} is not a legal ISO 8601 Date Time.`);\n  }\n\n  if (!xmlDateSchemaRegex.test(datetime)) {\n    res.warnings.push(\n      `${datetime} is not a XMLSCHEMA11-2 date-time. See: https://www.w3.org/TR/vc-data-model/#issuance-date, https://www.w3.org/TR/xmlschema11-2/#dateTime`\n    );\n  }\n\n  moment.suppressDeprecationWarnings = true;\n  // If leap second (60 seconds) make it a valid date\n  let newDatetime = datetime;\n  let isLeapSecond = false;\n  try {\n    if (newDatetime.split(\":\")[2].substring(0, 2) === \"60\") {\n      newDatetime = newDatetime.replace(\"60\", \"59\");\n      const newDate = new Date(newDatetime);\n      newDate.setSeconds(new Date(newDatetime).getSeconds() + 1);\n      newDatetime = newDate.toISOString();\n      isLeapSecond = true;\n    }\n  } catch (err) {}\n  if (moment(newDatetime).toISOString() === null) {\n    res.warnings.push(\n      `${datetime} could not be parsed and serialized as ISO 8601 Date Time.`\n    );\n  }\n\n  if (isJWT) {\n    if (isLeapSecond) {\n      res.warnings.push(`${datetime} lost leap second information.`);\n    }\n    if (TIME_ZONE_OFFSET_MATCH.test(datetime)) {\n      res.warnings.push(`${datetime} lost timezone offset information.`);\n    }\n    if (new Date(newDatetime).getMilliseconds()) {\n      res.warnings.push(`${datetime} lost millisecond information.`);\n    }\n  }\n  moment.suppressDeprecationWarnings = false;\n\n  res.valid = res.warnings.length === 0;\n  return res;\n};\n","import jsonld from \"@transmute/jsonld\";\nimport { check } from \"@transmute/jsonld-schema\";\n\nimport { checkDate } from \"./checkDate\";\nimport { DocumentLoader } from \"../types/DocumentLoader\";\nimport CredentialCheck, {\n  CredentialCheckObject\n} from \"../types/CredentialCheck\";\nimport { VerifiableCredential } from \"../types/VerifiableCredential\";\n\nfunction _getId(obj: any) {\n  if (typeof obj === \"string\") {\n    return obj;\n  }\n\n  if (!(\"id\" in obj)) {\n    return;\n  }\n\n  return obj.id;\n}\n\nconst requireContext = (credential: CredentialCheckObject) => {\n  if (!credential[\"@context\"]) {\n    throw new Error(\n      [\n        \"Verifiable credentials MUST include a @context property.\",\n        \"See: https://www.w3.org/TR/vc-data-model/#dfn-context\"\n      ].join(\"\")\n    );\n  }\n};\n\nconst requireDocumentLoader = (documentLoader?: DocumentLoader) => {\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for checking presentations.'\n    );\n  }\n};\n\nconst handleJWT = (\n  credential: CredentialCheck\n): { isJWT: boolean; credential: CredentialCheckObject } => {\n  let isJWT = false;\n  let credentialObj: CredentialCheckObject;\n  if (typeof credential === \"string\") {\n    let [encodedHeader, encodedPayload] = credential.split(\".\");\n    const header = JSON.parse(Buffer.from(encodedHeader, \"base64\").toString());\n    if (!header.alg) {\n      throw new Error(\"alg is required in JWT header\");\n    }\n    const payload = JSON.parse(\n      Buffer.from(encodedPayload, \"base64\").toString()\n    );\n    credentialObj = payload.vc;\n    isJWT = true;\n  } else {\n    credentialObj = credential;\n  }\n  return { isJWT, credential: credentialObj };\n};\n\nconst checkValidJsonLd = async (\n  credential: VerifiableCredential,\n  documentLoader: (iri: string) => { document: any }\n) => {\n  const isValidJsonLd = await check({ input: credential, documentLoader });\n  if (!isValidJsonLd.ok) {\n    throw new Error(\n      `credential is not valid JSON-LD: ${JSON.stringify(\n        isValidJsonLd.error,\n        null,\n        2\n      )}`\n    );\n  }\n};\n\nconst requireType = (credential: CredentialCheckObject) => {\n  if (!credential[\"type\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST have a type specified. See: https://www.w3.org/TR/vc-data-model/#dfn-type\"\n    );\n  }\n};\n\nconst requireCredentialSubject = (credential: CredentialCheckObject) => {\n  if (!credential[\"credentialSubject\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST include a credentialSubject property. See: https://www.w3.org/TR/vc-data-model/#credential-subject\"\n    );\n  }\n};\n\nconst checkType = (credential: CredentialCheckObject) => {\n  if (!jsonld.getValues(credential, \"type\").includes(\"VerifiableCredential\")) {\n    throw new Error(\n      \"Verifiable credentials type MUST include `VerifiableCredential`. See: https://www.w3.org/TR/vc-data-model/#dfn-type\"\n    );\n  }\n};\nconst requireIssuer = (credential: CredentialCheckObject) => {\n  if (!credential[\"issuer\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST include a issuer property. See: https://www.w3.org/TR/vc-data-model/#issuer\"\n    );\n  }\n};\n\nconst requireIssuanceDate = (credential: CredentialCheckObject) => {\n  if (!credential[\"issuanceDate\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST include a issuanceDate. See: https://www.w3.org/TR/vc-data-model/#issuance-date\"\n    );\n  }\n};\n\nconst checkIssuanceDate = (\n  credential: VerifiableCredential,\n  isJWT: boolean,\n  strict: \"ignore\" | \"warn\" | \"throw\"\n) => {\n  // check issuanceDate cardinality\n  if (jsonld.getValues(credential, \"issuanceDate\").length > 1) {\n    throw new Error('\"issuanceDate\" property can only have one value.');\n  }\n  // check issued is a date\n  const res = checkDate(credential.issuanceDate, isJWT);\n  if (!res.valid) {\n    const message = [\n      \"issuanceDate is not valid: \" + JSON.stringify(res.warnings, null, 2),\n      \"issuanceDate must be XML Datestring as defined in spec: https://w3c.github.io/vc-data-model/#issuance-date\"\n    ].join(\"\\n\");\n    if (strict == \"warn\") {\n      console.warn(message);\n    }\n    if (strict == \"throw\") {\n      throw new Error(message);\n    }\n  }\n};\n\nconst checkExpirationDate = (\n  credential: VerifiableCredential,\n  isJWT: boolean,\n  strict: \"ignore\" | \"warn\" | \"throw\"\n) => {\n  if (\"expirationDate\" in credential) {\n    const res = checkDate(credential.expirationDate, isJWT);\n    if (!res.valid) {\n      const message = [\n        \"expirationDate is not valid: \" + JSON.stringify(res.warnings, null, 2),\n        \"expirationDate must be XML Datestring as defined in spec: https://w3c.github.io/vc-data-model/#expiration\"\n      ].join(\"\\n\");\n      if (strict == \"warn\") {\n        console.warn(message);\n      }\n      if (strict == \"throw\") {\n        throw new Error(message);\n      }\n    }\n  }\n};\n\nconst checkIssuer = (credential: VerifiableCredential) => {\n  // check issuer cardinality\n  if (jsonld.getValues(credential, \"issuer\").length > 1) {\n    throw new Error('\"issuer\" property can only have one value.');\n  }\n\n  // https://www.rfc-editor.org/rfc/rfc3986#page-50\n  const rfc3986Regex = new RegExp(\n    \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n  );\n  if (\"issuer\" in credential) {\n    const issuer = _getId(credential.issuer);\n    if (!issuer) {\n      throw new Error(\n        `Verifiable credentials issuer:object MUST have an id. See: https://www.w3.org/TR/vc-data-model/#issuer`\n      );\n    }\n    if (!rfc3986Regex.test(issuer)) {\n      throw new Error(\n        \"Verifiable credentials issuer:string MUST be a RFC3986 URI. See: https://www.w3.org/TR/vc-data-model/#issuer, https://www.rfc-editor.org/rfc/rfc3986\"\n      );\n    }\n    if (!issuer.includes(\":\")) {\n      throw new Error(`\"issuer\" id must be a URL: ${issuer}`);\n    }\n  }\n};\n\nconst checkCredentialStatus = (credential: VerifiableCredential) => {\n  if (\"credentialStatus\" in credential) {\n    if (!credential.credentialStatus.id) {\n      throw new Error('\"credentialStatus\" must include an id.');\n    }\n    if (!credential.credentialStatus.type) {\n      throw new Error('\"credentialStatus\" must include a type.');\n    }\n  }\n};\n\nconst checkEvidence = (credential: VerifiableCredential) => {\n  // check evidences are URLs\n  // FIXME\n  jsonld.getValues(credential, \"evidence\").forEach((evidence: any) => {\n    const evidenceId = _getId(evidence);\n    if (evidenceId && !evidenceId.includes(\":\")) {\n      throw new Error(`\"evidence\" id must be a URL: ${evidence}`);\n    }\n  });\n};\n\nconst checkId = (credential: VerifiableCredential) => {\n  // https://www.rfc-editor.org/rfc/rfc3986#page-50\n  const rfc3986Regex = new RegExp(\n    \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n  );\n  if (credential.id && !rfc3986Regex.test(credential.id)) {\n    throw new Error(\n      [\n        \"Verifiable credentials id (if exists) MUST be a RFC3986 URI.\",\n        \"See: https://www.w3.org/TR/vc-data-model/#dfn-id\"\n      ].join(\"\")\n    );\n  }\n};\n\nconst requireFields = (credential: any) => {\n  requireContext(credential);\n  requireType(credential);\n  requireCredentialSubject(credential);\n  requireIssuer(credential);\n  requireIssuanceDate(credential);\n};\n\nconst checkFields = (\n  credential: VerifiableCredential,\n  isJWT: boolean,\n  strict: \"ignore\" | \"warn\" | \"throw\"\n) => {\n  checkType(credential);\n  checkIssuanceDate(credential, isJWT, strict);\n  checkExpirationDate(credential, isJWT, strict);\n  checkIssuer(credential);\n  checkCredentialStatus(credential);\n  checkEvidence(credential);\n  checkId(credential);\n};\n\nexport const checkCredential = async (\n  credential: CredentialCheck,\n  options: {\n    documentLoader?: DocumentLoader;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader } = options;\n  const strict = options.strict || \"warn\";\n  if (options.strict === \"ignore\") {\n    return undefined;\n  }\n  const { isJWT, credential: newCredential } = handleJWT(credential);\n  credential = newCredential;\n\n  requireDocumentLoader(documentLoader);\n  requireFields(credential);\n  checkFields(credential as VerifiableCredential, isJWT, strict);\n  await checkValidJsonLd(\n    credential as VerifiableCredential,\n    (documentLoader as unknown) as (iri: string) => { document: any }\n  );\n\n  return undefined;\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nexport const { AssertionProofPurpose } = ldp.purposes;\n\nexport class CredentialIssuancePurpose extends AssertionProofPurpose {\n  constructor({ controller, date, maxTimestampDelta }: any = {}) {\n    super({ controller, date, maxTimestampDelta });\n  }\n\n  async validate(\n    proof: any,\n    { document, suite, verificationMethod, documentLoader, expansionMap }: any\n  ) {\n    try {\n      const result = await super.validate(proof, {\n        document,\n        suite,\n        verificationMethod,\n        documentLoader,\n        expansionMap\n      });\n\n      if (!result.valid) {\n        throw result.error;\n      }\n\n      const issuer =\n        typeof document.issuer === \"string\"\n          ? document.issuer\n          : document.issuer.id;\n\n      if (!issuer) {\n        throw new Error(\"Credential issuer is required.\");\n      }\n\n      if (result.controller.id !== issuer) {\n        throw new Error(\n          \"Credential issuer must match the verification method controller.\"\n        );\n      }\n\n      return { valid: true };\n    } catch (error) {\n      return { valid: false, error };\n    }\n  }\n}\n\nexport default CredentialIssuancePurpose;\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkCredential } from \"../checkCredential\";\nimport { CredentialIssuancePurpose } from \"./CredentialIssuancePurpose\";\n\nexport const createVerifiableCredential = async (options: {\n  credential: any;\n  suite: any;\n  documentLoader: any;\n  strict?: \"ignore\" | \"warn\" | \"throw\";\n}) => {\n  const { credential, suite, documentLoader } = options;\n\n  const strict = options.strict || \"warn\";\n\n  // run common credential checks\n  if (!credential) {\n    throw new TypeError('\"credential\" parameter is required for issuing.');\n  }\n\n  await checkCredential(credential, { documentLoader, strict });\n\n  if (!documentLoader) {\n    throw new TypeError('\"documentLoader\" parameter is required for issuing.');\n  }\n\n  if (!suite) {\n    throw new TypeError('\"suite\" parameter is required for issuing.');\n  }\n  // check to make sure the `suite` has required params\n  // Note: verificationMethod defaults to publicKey.id, in suite constructor...\n  // ...in some implementations...\n  if (!suite.verificationMethod) {\n    throw new TypeError('\"suite.verificationMethod\" property is required.');\n  }\n\n  const purpose = new CredentialIssuancePurpose();\n\n  return ldp.sign(credential, { purpose, ...options });\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkCredential } from \"../checkCredential\";\nimport { CredentialIssuancePurpose } from \"./CredentialIssuancePurpose\";\n\nexport const verifyVerifiableCredential = async (options: {\n  credential: any;\n  suite: any;\n  checkStatus?: any;\n  documentLoader: any;\n  expansionMap?: boolean;\n}) => {\n  const { credential, checkStatus, documentLoader } = options;\n  const compactProof = false;\n  if (options.expansionMap !== undefined) {\n    const message = \"The default options are not being used.\";\n    throw new Error(message);\n  }\n  try {\n    if (!credential) {\n      throw new TypeError('A \"credential\" property is required for verifying.');\n    }\n\n    // run common credential checks\n    await checkCredential(credential, { documentLoader });\n\n    // if credential status is provided, a `checkStatus` function must be given\n    if (\n      credential.credentialStatus &&\n      typeof options.checkStatus !== \"function\"\n    ) {\n      throw new TypeError(\n        'A \"checkStatus\" function must be given to verify credentials with ' +\n          '\"credentialStatus\".'\n      );\n    }\n\n    const purpose = new CredentialIssuancePurpose();\n\n    const result = await ldp.verify(credential, {\n      ...options,\n      purpose,\n      compactProof\n    });\n\n    // if verification has already failed, skip status check\n    if (!result.verified) {\n      return result;\n    }\n\n    if (credential.credentialStatus) {\n      result.statusResult = await checkStatus(options);\n      if (!result.statusResult.verified) {\n        result.verified = false;\n      }\n    }\n\n    return result;\n  } catch (error) {\n    return {\n      verified: false,\n      results: [{ credential, verified: false, error }],\n      error\n    };\n  }\n};\n","import jsonld from \"@transmute/jsonld\";\n// import constants from './constants';\n\nimport { checkCredential } from \"./checkCredential\";\nimport { check } from \"@transmute/jsonld-schema\";\n\nexport const checkPresentation = async (\n  presentation: any,\n  options: {\n    documentLoader: any;\n    strict: \"ignore\" | \"warn\" | \"throw\";\n    domain?: string;\n    challenge?: string;\n  }\n) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  if (typeof presentation === \"string\") {\n    let [encodedHeader, encodedPayload] = presentation.split(\".\");\n    const header = JSON.parse(Buffer.from(encodedHeader, \"base64\").toString());\n    if (!header.alg) {\n      throw new Error(\"alg is required in JWT header\");\n    }\n    const payload = JSON.parse(\n      Buffer.from(encodedPayload, \"base64\").toString()\n    );\n    presentation = payload.vp;\n    if (payload.aud) {\n      if (payload.aud !== domain) {\n        throw new Error(\n          '\"aud\" and \"domain\" does not match this verifiable presentation'\n        );\n      }\n    }\n    if (payload.nonce) {\n      if (payload.nonce !== challenge) {\n        throw new Error(\n          '\"nonce\" and \"challenge\" does not match this verifiable presentation'\n        );\n      }\n    }\n  }\n\n  if (!presentation[\"@context\"]) {\n    throw new Error(\n      \"Verifiable Presentations MUST include a @context property.\"\n    );\n  }\n\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for checking presentations.'\n    );\n  }\n\n  const isValidJsonLd = await check({ input: presentation, documentLoader });\n\n  if (!isValidJsonLd.ok) {\n    throw new Error(\n      `presentation is not valid JSON-LD: ${JSON.stringify(\n        isValidJsonLd.error,\n        null,\n        2\n      )}`\n    );\n  }\n\n  const types = jsonld.getValues(presentation, \"type\");\n\n  // check type presence\n  if (!types.includes(\"VerifiablePresentation\")) {\n    throw new Error('\"type\" must include \"VerifiablePresentation\".');\n  }\n\n  if (presentation.verifiableCredential) {\n    const credentials = Array.isArray(presentation.verifiableCredential)\n      ? presentation.verifiableCredential\n      : [presentation.verifiableCredential];\n\n    await Promise.all(\n      credentials.map(async (vc: any) => {\n        await checkCredential(vc, { documentLoader, strict });\n      })\n    );\n  }\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\nimport { checkPresentation } from \"../checkPresentation\";\nexport const createVerifiablePresentation = async (options: {\n  presentation: any;\n  suite: any;\n  domain?: string;\n  challenge: string;\n  documentLoader: (\n    iri: string\n  ) => Promise<{\n    document: any;\n  }>;\n  strict?: \"ignore\" | \"warn\" | \"throw\";\n}) => {\n  const { presentation, domain, challenge, documentLoader } = options;\n\n  const strict = options.strict || \"warn\";\n\n  await checkPresentation(presentation, { documentLoader, strict });\n\n  const purpose = new ldp.purposes.AuthenticationProofPurpose({\n    domain,\n    challenge\n  });\n\n  return ldp.sign(presentation, { ...options, purpose });\n};\n","import { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const getVerifierForJwt = async (jwt: string, options: any) => {\n  const [header] = jwt\n    .split(\".\")\n    .splice(0, 1)\n    .map((item: string) => {\n      return JSON.parse(Buffer.from(item, \"base64\").toString());\n    });\n  if (!header.kid) {\n    throw new Error(\n      'Transmute requires \"kid\" in vc-jwt headers. Otherwise key dereferencing is not always possible.'\n    );\n  }\n  let suite = Array.isArray(options.suite) ? options.suite[0] : options.suite;\n\n  const verificationMethod = await suite.getVerificationMethod({\n    proof: {\n      verificationMethod: header.kid\n    },\n    documentLoader: options.documentLoader,\n    instance: true // need this to get the class instance\n  });\n\n  if (!verificationMethod || !verificationMethod.useJwa) {\n    throw new Error(\n      'Transmute requires \"suite.getVerificationMethod\" to return a key instance with member useJwa.'\n    );\n  }\n  if (suite.key?.alg) {\n    verificationMethod.alg = suite.key.alg;\n  }\n  const k2 = await JsonWebKey.from(\n    await verificationMethod.export({ type: \"JsonWebKey2020\" }),\n    {\n      detached: false\n    }\n  );\n\n  const verifier = k2.verifier();\n  return verifier;\n};\n","export const decodeJwt = (jwt: string) => {\n  const [encodedHeader, encodedPayload, encodedSignature] = jwt.split(\".\");\n  const [header, payload] = [encodedHeader, encodedPayload].map(\n    (item: string) => {\n      return JSON.parse(Buffer.from(item, \"base64\").toString());\n    }\n  );\n  return {\n    header,\n    payload,\n    signature: encodedSignature\n  };\n};\n","import { checkCredential } from \"../checkCredential\";\n\nexport const verifyVerifiableCredential = async (\n  jwt: string,\n  options: {\n    verifier: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { verifier, documentLoader } = options;\n  const strict = options.strict || \"warn\";\n\n  await checkCredential(jwt, { documentLoader, strict });\n  const res = await verifier.verify({\n    signature: jwt\n  });\n  return res;\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkPresentation } from \"../checkPresentation\";\nimport { PresentationVerification } from \"../types/PresentationVerification\";\nimport { verifyVerifiableCredential } from \"./verifyVerifiableCredential\";\nimport { getVerifierForJwt } from \"../vc-jwt/getVerifierForJwt\";\nimport { decodeJwt } from \"../vc-jwt/decodeJwt\";\nimport { verifyVerifiableCredential as verifyJwt } from \"../vc-jwt/verifyVerifiableCredential\";\nconst verifyCredentialsInPresentation = async (\n  presentation: any,\n  options: any\n) => {\n  let result: any = { verified: false };\n  const results = await Promise.all(\n    presentation.verifiableCredential.map(async (credential: any) => {\n      if (!credential[\"@context\"]) {\n        const verifier = await getVerifierForJwt(credential, options);\n        const res = await verifyJwt(credential, { ...options, verifier });\n        const decoded = decodeJwt(credential);\n        return {\n          credentialId: decoded.payload.vc.id || undefined,\n          verified: res\n        };\n      }\n      if (credential.credentialStatus && !options.checkStatus) {\n        throw new Error(\n          \"options.checkStatus is required to verify presentation of revocable credentials.\"\n        );\n      }\n      const res = await verifyVerifiableCredential({\n        credential,\n        ...options\n      });\n      return {\n        credentialId: credential.id,\n        ...res\n      };\n    })\n  );\n  result.verified = results.every((r: any) => r.verified);\n  result.results = results;\n  return result;\n};\n\nexport const verifyVerifiablePresentation = async (options: any) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  const { presentation } = options;\n\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for verifying.'\n    );\n  }\n\n  if (!presentation) {\n    throw new TypeError('A \"presentation\" property is required for verifying.');\n  }\n  try {\n    await checkPresentation(presentation, { documentLoader, strict });\n  } catch (e) {\n    return {\n      verified: false,\n      presentation: e\n    };\n  }\n\n  if (\n    (!presentation.proof && !presentation.verifiableCredential) ||\n    (presentation.verifiableCredential &&\n      presentation.verifiableCredential.length === 0)\n  ) {\n    const message =\n      'presentation MUST contain \"proof\" or \"verifiableCredential\"';\n    throw new Error(message);\n  }\n\n  if (!presentation.proof) {\n    const message = 'presentation MUST contain \"proof\" when strict';\n    if (strict == \"warn\") {\n      console.warn(message);\n    }\n    if (strict == \"throw\") {\n      throw new Error(message);\n    }\n  }\n\n  const result: PresentationVerification = {\n    verified: false\n  };\n\n  if (\n    presentation.verifiableCredential &&\n    presentation.verifiableCredential.length\n  ) {\n    const credentials = await verifyCredentialsInPresentation(\n      presentation,\n      options\n    );\n    result.credentials = credentials;\n    if (!credentials.verified) {\n      result.verified = false;\n    }\n  }\n\n  if (presentation.proof) {\n    const purpose = new ldp.purposes.AuthenticationProofPurpose({\n      domain,\n      challenge\n    });\n    const verification = await ldp.verify(presentation, {\n      ...options,\n      purpose\n    });\n    result.presentation = verification;\n  } else {\n    result.presentation = result.credentials;\n  }\n\n  if (result.presentation && !result.credentials) {\n    result.verified = result.presentation.verified;\n  }\n\n  if (result.presentation && result.credentials) {\n    result.verified =\n      result.presentation.verified && result.credentials.verified;\n  }\n  return result;\n};\n","import moment from \"moment\";\nimport { checkCredential } from \"../checkCredential\";\n\nexport const createVcPayload = async (\n  credential: any,\n  options: {\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader } = options;\n  const strict = options.strict || \"warn\";\n\n  if (!credential.issuer) {\n    throw new Error(\"Issuer is a required field.\");\n  }\n\n  await checkCredential(credential, { documentLoader, strict });\n\n  const issuer = credential.issuer.id\n    ? credential.issuer.id\n    : credential.issuer;\n  let subject = undefined;\n  if (\n    typeof credential.credentialSubject === \"string\" ||\n    credential.credentialSubject instanceof String\n  ) {\n    subject = credential.credentialSubject;\n  }\n  if (\n    typeof credential.credentialSubject === \"object\" &&\n    credential.credentialSubject !== null &&\n    credential.credentialSubject.id\n  ) {\n    subject = credential.credentialSubject.id;\n  }\n  const payload: any = {\n    iss: issuer,\n    sub: subject,\n    vc: credential,\n    jti: credential.id,\n    nbf: moment(credential.issuanceDate).unix()\n  };\n  if (credential.expirationDate) {\n    payload.exp = moment(credential.expirationDate).unix();\n  }\n  return payload;\n};\n","import { createVcPayload } from \"./createVcPayload\";\n\nexport const createVerifiableCredential = async (\n  credential: any,\n  options: {\n    signer: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { signer } = options;\n  const payload: any = await createVcPayload(credential, options);\n  const jwt = await signer.sign({ data: payload });\n  return jwt;\n};\n","import { checkPresentation } from \"../checkPresentation\";\n\nexport const createVpPayload = async (\n  presentation: any,\n  options: {\n    documentLoader: any;\n    domain?: string;\n    challenge: string;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  if (!challenge) {\n    throw new Error(\n      '\"challenge\" is required to create verifiable presentations (it will be used for the \"nonce\" value)'\n    );\n  }\n\n  await checkPresentation(presentation, {\n    documentLoader,\n    strict,\n    domain,\n    challenge\n  });\n\n  const payload: any = {};\n\n  if (presentation.holder) {\n    const holder = presentation.holder.id\n      ? presentation.holder.id\n      : presentation.holder;\n\n    payload.iss = holder;\n    payload.sub = holder;\n  }\n\n  payload.vp = presentation;\n\n  if (domain) {\n    payload.aud = domain;\n  }\n\n  if (challenge) {\n    payload.nonce = challenge;\n  }\n  return payload;\n};\n","import { createVpPayload } from \"./createVpPayload\";\n\nexport const createVerifiablePresentation = async (\n  presentation: any,\n  options: {\n    domain?: string;\n    challenge: string;\n    signer: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { signer } = options;\n  const payload = await createVpPayload(presentation, options);\n  const jwt = await signer.sign({ data: payload });\n  return jwt;\n};\n","import { checkPresentation } from \"../checkPresentation\";\n\nexport const verifyVerifiablePresentation = async (\n  jwt: string,\n  options: {\n    domain?: string;\n    challenge: string;\n    verifier: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { verifier, documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  await checkPresentation(jwt, { documentLoader, strict, domain, challenge });\n  const res = await verifier.verify({\n    signature: jwt\n  });\n  return res;\n};\n","import * as ld from \"../../vc-ld\";\nimport * as jwt from \"../../vc-jwt\";\n\nimport { CreateCredentialOptions, CreateCredentialResult } from \"../../types\";\nimport { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const create = async (\n  options: CreateCredentialOptions\n): Promise<CreateCredentialResult> => {\n  const result: CreateCredentialResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  if (options.format.includes(\"vc\")) {\n    result.items.push(\n      await ld.createVerifiableCredential({\n        credential: options.credential,\n        suite: options.suite,\n        documentLoader: options.documentLoader\n      })\n    );\n  }\n  if (options.format.includes(\"vc-jwt\")) {\n    const suite = Array.isArray(options.suite)\n      ? options.suite[0]\n      : options.suite;\n    const { key } = suite;\n    if (!key || !key.useJwa) {\n      throw new Error(\n        \"Cannot create credential when suite does not contain a key that supports useJwa.\"\n      );\n    }\n    const k2 = await JsonWebKey.from(\n      await (key as any).export({ type: \"JsonWebKey2020\", privateKey: true }),\n      {\n        detached: false,\n        header: {\n          kid: key.id\n        }\n      }\n    );\n    const signer = k2.signer();\n    const payload: any = await jwt.createVcPayload(options.credential, options);\n    result.items.push(await signer.sign({ data: payload }));\n  }\n  return result;\n};\n","import { DeriveCredentialOptions, DeriveCredentialResult } from \"../../types\";\n\nexport const derive = async (\n  options: DeriveCredentialOptions\n): Promise<DeriveCredentialResult> => {\n  const result: DeriveCredentialResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  const { credential, frame, suite, documentLoader } = options;\n\n  const { proof, ...document } = credential;\n\n  if (!suite.deriveProof) {\n    throw new Error(\"Suite requires deriveProof\");\n  }\n\n  const derivationResult = await suite.deriveProof({\n    document: document,\n    proof: { ...proof, \"@context\": document[\"@context\"] },\n    revealDocument: frame,\n    documentLoader\n  });\n  const derivedCredential = {\n    ...derivationResult.document,\n    proof: derivationResult.proof\n  };\n  delete derivedCredential.proof[\"@context\"];\n  result.items.push(derivedCredential);\n  return result;\n};\n","import * as ld from \"../../vc-ld\";\nimport { VerifyCredentialOptions, VerificationResult } from \"../../types\";\nimport { VerifiableCredential } from \"../../types/VerifiableCredential\";\nimport { getVerifierForJwt } from \"../../vc-jwt/getVerifierForJwt\";\nimport { decodeJwt } from \"../../vc-jwt/decodeJwt\";\nimport moment from \"moment\";\nexport const verify = async (\n  options: VerifyCredentialOptions\n): Promise<VerificationResult> => {\n  let credential: VerifiableCredential = options.credential as VerifiableCredential;\n  const result: VerificationResult = {\n    verified: false,\n    verifications: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  if (\n    options.format.includes(\"vc\") &&\n    (options.credential as any)[\"@context\"]\n  ) {\n    const res = await ld.verifyVerifiableCredential({\n      credential: options.credential,\n      suite: options.suite,\n      documentLoader: options.documentLoader,\n      checkStatus: options.checkStatus,\n      expansionMap: options.expansionMap\n    });\n    result.verified = res.verified;\n    if (!result.verified) {\n      result.error = [];\n      if (res && res.statusResult && !res.statusResult.verified) {\n        result.error.push({\n          statusResult: res.statusResult\n        });\n      }\n      if (res && res.results[0] && !res.results[0].verified) {\n        if (\n          (res.results[0].error,\n          res.results[0].error.message.indexOf(\"Invalid JSON-LD\") >= 0)\n        ) {\n          result.error.push(\n            \"This credential contains invalid JSON-LD allowing it to be mutable.\"\n          );\n        }\n        result.error.push({ proofResult: res.results[0].verified });\n      }\n      if (res.error) {\n        result.error.push(res.error);\n      }\n    }\n  }\n\n  // vc-jwt's are strings with an encoded vc member that conforms to the data model\n  let jwtVerificationMethod: string = \"\";\n  if (\n    options.format.includes(\"vc-jwt\") &&\n    !(options.credential as VerifiableCredential)[\"@context\"]\n  ) {\n    const verifier = await getVerifierForJwt(\n      options.credential as string,\n      options\n    );\n\n    const verified = await verifier.verify({\n      signature: options.credential\n    });\n    result.verified = verified;\n\n    const decodedString = decodeJwt(options.credential as string);\n    credential = decodedString.payload.vc as VerifiableCredential;\n    jwtVerificationMethod =\n      decodedString?.header?.kid ??\n      (typeof decodedString.payload.vc.issuer === \"object\"\n        ? decodedString.payload.vc.issuer.id\n        : decodedString.payload.vc.issuer);\n  }\n\n  // Signature\n  const proofCheckFailed = !!(\n    result.error &&\n    result.error.find((e: any) => e?.proofResult?.verified === false)\n  );\n\n  if (!result.verified && proofCheckFailed) {\n    const description = \"This credential has a invalid signature\";\n    result.verifications.push({\n      status: \"bad\",\n      title: \"Proof\",\n      description\n    });\n  } else {\n    result.verifications.push({\n      status: \"good\",\n      title: \"Proof\",\n      description:\n        (options.credential as VerifiableCredential).proof\n          ?.verificationMethod ?? jwtVerificationMethod\n    });\n  }\n\n  // Activation\n  if (credential.issuanceDate) {\n    const now = moment();\n    const issuanceDate = moment(credential.issuanceDate);\n    if (now.isAfter(issuanceDate)) {\n      result.verifications.push({\n        status: \"good\",\n        title: \"Activation\",\n        description: `This credential activated ${issuanceDate.fromNow()}`\n      });\n    } else {\n      result.verifications.push({\n        status: \"bad\",\n        title: \"Activation\",\n        description: `This credential activates ${issuanceDate.fromNow()}`\n      });\n    }\n  }\n\n  // Expiration\n  if (credential.expirationDate) {\n    const now = moment();\n    const expirationDate = moment(credential.expirationDate);\n    if (now.isBefore(expirationDate)) {\n      result.verifications.push({\n        status: \"good\",\n        title: \"Expired\",\n        description: `This credential expires ${expirationDate.fromNow()}`\n      });\n    } else {\n      result.verifications.push({\n        status: \"bad\",\n        title: \"Expired\",\n        description: `This credential expired ${expirationDate.fromNow()}`\n      });\n    }\n  }\n\n  // Revocation Status\n  if (credential.credentialStatus) {\n    const statusCheckFailed = !!(\n      result.error &&\n      result.error.find((e: any) => e?.statusResult?.verified === false)\n    );\n    if (!result.verified && statusCheckFailed) {\n      result.verifications.push({\n        status: \"bad\",\n        title: \"Revocation\",\n        description: \"This credential has been revoked.\"\n      });\n    } else {\n      result.verifications.push({\n        status: \"good\",\n        title: \"Revocation\",\n        description: \"This credential has not been revoked.\"\n      });\n    }\n  }\n\n  return result;\n};\n","import { create } from \"./create\";\nimport { derive } from \"./derive\";\nimport { verify } from \"./verify\";\n\nexport const credential = {\n  create,\n  derive,\n  verify\n};\n","import * as ld from \"../../vc-ld\";\nimport * as jwt from \"../../vc-jwt\";\nimport {\n  CreateVerifiablePresentationOptions,\n  CreatePresentationResult\n} from \"../../types\";\nimport { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const create = async (\n  options: CreateVerifiablePresentationOptions\n): Promise<CreatePresentationResult> => {\n  const result: CreatePresentationResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vp\"];\n  }\n\n  if (options.format.includes(\"vp\")) {\n    result.items.push(\n      await ld.createVerifiablePresentation({\n        presentation: options.presentation,\n        suite: options.suite,\n        domain: options.domain,\n        challenge: options.challenge,\n        documentLoader: options.documentLoader\n      })\n    );\n  }\n  if (options.format.includes(\"vp-jwt\")) {\n    const suite = Array.isArray(options.suite)\n      ? options.suite[0]\n      : options.suite;\n\n    const { key } = suite;\n\n    if (!key || !key.useJwa) {\n      throw new Error(\n        \"Cannot create credential when suite does not contain a key that supports useJwa.\"\n      );\n    }\n    const k2 = await JsonWebKey.from(\n      await (key as any).export({ type: \"JsonWebKey2020\", privateKey: true }),\n      {\n        detached: false,\n        header: {\n          kid: key.id\n        }\n      }\n    );\n    const signer = k2.signer();\n    const payload: any = await jwt.createVpPayload(\n      options.presentation,\n      options\n    );\n    result.items.push(await signer.sign({ data: payload }));\n  }\n\n  return result;\n};\n","import * as ld from \"../../vc-ld\";\n\nimport { VerifyPresentationOptions, VerificationResult } from \"../../types\";\nimport { getVerifierForJwt } from \"../../vc-jwt/getVerifierForJwt\";\n\nexport const verify = async (\n  options: VerifyPresentationOptions\n): Promise<VerificationResult> => {\n  const result: any = {\n    verified: false\n  };\n\n  if (!options.format) {\n    options.format = [\"vp\"];\n  }\n\n  if (\n    options.format.includes(\"vp\") &&\n    (options.presentation as any)[\"@context\"]\n  ) {\n    return ld.verifyVerifiablePresentation({\n      presentation: options.presentation,\n      suite: options.suite,\n      domain: options.domain,\n      challenge: options.challenge,\n      checkStatus: options.checkStatus,\n      documentLoader: options.documentLoader\n    });\n  }\n\n  // vp-jwt's are strings with an encoded vp member that conforms to the data model\n  if (\n    options.format.includes(\"vp-jwt\") &&\n    !(options.presentation as any)[\"@context\"]\n  ) {\n    const verifier = await getVerifierForJwt(\n      options.presentation as string,\n      options\n    );\n    const verified = await verifier.verify({\n      signature: options.presentation\n    });\n    result.verified = verified;\n  }\n\n  return result;\n};\n","import { create } from \"./create\";\nimport { verify } from \"./verify\";\n\nexport const presentation = {\n  create,\n  verify\n};\n","import { credential } from \"./credential\";\nimport { presentation } from \"./presentation\";\n\nimport { decodeJwt } from \"../vc-jwt/decodeJwt\";\n\nconst jwt = {\n  decode: decodeJwt\n};\n\nexport const verifiable = { credential, presentation, jwt };\n"],"names":["xmlDateSchemaRegex","ISO_8601_FULL","TIME_ZONE_OFFSET_MATCH","checkDate","datetime","isJWT","res","valid","warnings","test","push","moment","suppressDeprecationWarnings","newDatetime","isLeapSecond","split","substring","replace","newDate","Date","setSeconds","getSeconds","toISOString","err","getMilliseconds","length","_getId","obj","id","requireContext","credential","Error","join","requireDocumentLoader","documentLoader","TypeError","handleJWT","credentialObj","encodedHeader","encodedPayload","header","JSON","parse","Buffer","from","toString","alg","payload","vc","checkValidJsonLd","check","input","isValidJsonLd","ok","stringify","error","requireType","requireCredentialSubject","checkType","jsonld","getValues","includes","requireIssuer","requireIssuanceDate","checkIssuanceDate","strict","issuanceDate","message","console","warn","checkExpirationDate","expirationDate","checkIssuer","rfc3986Regex","RegExp","issuer","checkCredentialStatus","credentialStatus","type","checkEvidence","forEach","evidence","evidenceId","checkId","requireFields","checkFields","checkCredential","options","undefined","newCredential","AssertionProofPurpose","ldp","CredentialIssuancePurpose","controller","date","maxTimestampDelta","validate","proof","document","suite","verificationMethod","expansionMap","result","createVerifiableCredential","purpose","verifyVerifiableCredential","checkStatus","compactProof","verified","statusResult","results","checkPresentation","presentation","domain","challenge","vp","aud","nonce","types","verifiableCredential","credentials","Array","isArray","Promise","all","map","createVerifiablePresentation","AuthenticationProofPurpose","getVerifierForJwt","jwt","splice","item","kid","getVerificationMethod","instance","useJwa","key","JsonWebKey","detached","k2","verifier","decodeJwt","encodedSignature","signature","verify","verifyCredentialsInPresentation","credentialId","verifyJwt","decoded","every","r","verifyVerifiablePresentation","verification","e","createVcPayload","subject","credentialSubject","String","iss","sub","jti","nbf","unix","exp","signer","sign","data","createVpPayload","holder","create","format","privateKey","items","ld","derive","frame","deriveProof","revealDocument","derivationResult","derivedCredential","proofCheckFailed","find","proofResult","description","verifications","status","title","jwtVerificationMethod","now","isAfter","fromNow","isBefore","statusCheckFailed","decodedString","indexOf","decode","verifiable"],"mappings":"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"}