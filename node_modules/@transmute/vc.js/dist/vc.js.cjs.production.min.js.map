{"version":3,"file":"vc.js.cjs.production.min.js","sources":["../src/checkCredential/checkDate.ts","../src/checkCredential/index.ts","../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../src/vc-ld/CredentialIssuancePurpose.ts","../src/vc-ld/createVerifiableCredential.ts","../src/vc-ld/verifyVerifiableCredential.ts","../src/checkPresentation.ts","../src/vc-ld/createVerifiablePresentation.ts","../src/vc-jwt/getVerifierForJwt.ts","../src/vc-jwt/decodeJwt.ts","../src/vc-jwt/verifyVerifiableCredential.ts","../src/vc-ld/verifyVerifiablePresentation.ts","../src/vc-jwt/createVcPayload.ts","../src/vc-jwt/createVpPayload.ts","../src/universal/index.ts","../src/universal/credential/index.ts","../src/universal/credential/create.ts","../src/universal/credential/derive.ts","../src/universal/credential/verify.ts","../src/universal/presentation/index.ts","../src/universal/presentation/create.ts","../src/universal/presentation/verify.ts","../src/vc-jwt/createVerifiableCredential.ts","../src/vc-jwt/createVerifiablePresentation.ts","../src/vc-jwt/verifyVerifiablePresentation.ts"],"sourcesContent":["import moment from \"moment\";\n\n// https://www.w3.org/TR/xmlschema11-2/#dateTime\n// Modified for leap seconds\nconst xmlDateSchemaRegex = /-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T(([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?|(24:00:00(\\.0+)?))(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?/;\n\n// Modified for leap seconds\nexport const ISO_8601_FULL = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5][0-9]([\\.,]\\d+)?|:60([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n\nexport const TIME_ZONE_OFFSET_MATCH = /[+-]\\d\\d:\\d\\d$/;\n\n// for the sake of safety, we check the date\n// against ISO 8601 and moment.\n// see also: https://github.com/w3c/vc-data-model/issues/782\nexport const checkDate = (\n  datetime: string,\n  isJWT: boolean = false\n): { valid: boolean; warnings: string[] } => {\n  const res: { valid: boolean; warnings: string[] } = {\n    valid: false,\n    warnings: []\n  };\n  // open source vc, make sure validation tests date strings are the right format for the date\n  if (!ISO_8601_FULL.test(datetime)) {\n    res.warnings.push(`${datetime} is not a legal ISO 8601 Date Time.`);\n  }\n\n  if (!xmlDateSchemaRegex.test(datetime)) {\n    res.warnings.push(\n      `${datetime} is not a XMLSCHEMA11-2 date-time. See: https://www.w3.org/TR/vc-data-model/#issuance-date, https://www.w3.org/TR/xmlschema11-2/#dateTime`\n    );\n  }\n\n  moment.suppressDeprecationWarnings = true;\n  // If leap second (60 seconds) make it a valid date\n  let newDatetime = datetime;\n  let isLeapSecond = false;\n  try {\n    if (newDatetime.split(\":\")[2].substring(0, 2) === \"60\") {\n      newDatetime = newDatetime.replace(\"60\", \"59\");\n      const newDate = new Date(newDatetime);\n      newDate.setSeconds(new Date(newDatetime).getSeconds() + 1);\n      newDatetime = newDate.toISOString();\n      isLeapSecond = true;\n    }\n  } catch (err) {}\n  if (moment(newDatetime).toISOString() === null) {\n    res.warnings.push(\n      `${datetime} could not be parsed and serialized as ISO 8601 Date Time.`\n    );\n  }\n\n  if (isJWT) {\n    if (isLeapSecond) {\n      res.warnings.push(`${datetime} lost leap second information.`);\n    }\n    if (TIME_ZONE_OFFSET_MATCH.test(datetime)) {\n      res.warnings.push(`${datetime} lost timezone offset information.`);\n    }\n    if (new Date(newDatetime).getMilliseconds()) {\n      res.warnings.push(`${datetime} lost millisecond information.`);\n    }\n  }\n  moment.suppressDeprecationWarnings = false;\n\n  res.valid = res.warnings.length === 0;\n  return res;\n};\n","import jsonld from \"@transmute/jsonld\";\nimport { check } from \"@transmute/jsonld-schema\";\n\nimport { checkDate } from \"./checkDate\";\nimport { DocumentLoader } from \"../types/DocumentLoader\";\nimport CredentialCheck, {\n  CredentialCheckObject\n} from \"../types/CredentialCheck\";\nimport { VerifiableCredential } from \"../types/VerifiableCredential\";\n\nfunction _getId(obj: any) {\n  if (typeof obj === \"string\") {\n    return obj;\n  }\n\n  if (!(\"id\" in obj)) {\n    return;\n  }\n\n  return obj.id;\n}\n\nconst requireContext = (credential: CredentialCheckObject) => {\n  if (!credential[\"@context\"]) {\n    throw new Error(\n      [\n        \"Verifiable credentials MUST include a @context property.\",\n        \"See: https://www.w3.org/TR/vc-data-model/#dfn-context\"\n      ].join(\"\")\n    );\n  }\n};\n\nconst requireDocumentLoader = (documentLoader?: DocumentLoader) => {\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for checking presentations.'\n    );\n  }\n};\n\nconst handleJWT = (\n  credential: CredentialCheck\n): { isJWT: boolean; credential: CredentialCheckObject } => {\n  let isJWT = false;\n  let credentialObj: CredentialCheckObject;\n  if (typeof credential === \"string\") {\n    let [encodedHeader, encodedPayload] = credential.split(\".\");\n    const header = JSON.parse(Buffer.from(encodedHeader, \"base64\").toString());\n    if (!header.alg) {\n      throw new Error(\"alg is required in JWT header\");\n    }\n    const payload = JSON.parse(\n      Buffer.from(encodedPayload, \"base64\").toString()\n    );\n    credentialObj = payload.vc;\n    isJWT = true;\n  } else {\n    credentialObj = credential;\n  }\n  return { isJWT, credential: credentialObj };\n};\n\nconst checkValidJsonLd = async (\n  credential: VerifiableCredential,\n  documentLoader: (iri: string) => { document: any }\n) => {\n  const isValidJsonLd = await check({ input: credential, documentLoader });\n  if (!isValidJsonLd.ok) {\n    throw new Error(\n      `credential is not valid JSON-LD: ${JSON.stringify(\n        isValidJsonLd.error,\n        null,\n        2\n      )}`\n    );\n  }\n};\n\nconst requireType = (credential: CredentialCheckObject) => {\n  if (!credential[\"type\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST have a type specified. See: https://www.w3.org/TR/vc-data-model/#dfn-type\"\n    );\n  }\n};\n\nconst requireCredentialSubject = (credential: CredentialCheckObject) => {\n  if (!credential[\"credentialSubject\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST include a credentialSubject property. See: https://www.w3.org/TR/vc-data-model/#credential-subject\"\n    );\n  }\n};\n\nconst checkType = (credential: CredentialCheckObject) => {\n  if (!jsonld.getValues(credential, \"type\").includes(\"VerifiableCredential\")) {\n    throw new Error(\n      \"Verifiable credentials type MUST include `VerifiableCredential`. See: https://www.w3.org/TR/vc-data-model/#dfn-type\"\n    );\n  }\n};\nconst requireIssuer = (credential: CredentialCheckObject) => {\n  if (!credential[\"issuer\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST include a issuer property. See: https://www.w3.org/TR/vc-data-model/#issuer\"\n    );\n  }\n};\n\nconst requireIssuanceDate = (credential: CredentialCheckObject) => {\n  if (!credential[\"issuanceDate\"]) {\n    throw new Error(\n      \"Verifiable credentials MUST include a issuanceDate. See: https://www.w3.org/TR/vc-data-model/#issuance-date\"\n    );\n  }\n};\n\nconst checkIssuanceDate = (\n  credential: VerifiableCredential,\n  isJWT: boolean,\n  strict: \"ignore\" | \"warn\" | \"throw\"\n) => {\n  // check issuanceDate cardinality\n  if (jsonld.getValues(credential, \"issuanceDate\").length > 1) {\n    throw new Error('\"issuanceDate\" property can only have one value.');\n  }\n  // check issued is a date\n  const res = checkDate(credential.issuanceDate, isJWT);\n  if (!res.valid) {\n    const message = [\n      \"issuanceDate is not valid: \" + JSON.stringify(res.warnings, null, 2),\n      \"issuanceDate must be XML Datestring as defined in spec: https://w3c.github.io/vc-data-model/#issuance-date\"\n    ].join(\"\\n\");\n    if (strict == \"warn\") {\n      console.warn(message);\n    }\n    if (strict == \"throw\") {\n      throw new Error(message);\n    }\n  }\n};\n\nconst checkExpirationDate = (\n  credential: VerifiableCredential,\n  isJWT: boolean,\n  strict: \"ignore\" | \"warn\" | \"throw\"\n) => {\n  if (\"expirationDate\" in credential) {\n    const res = checkDate(credential.expirationDate, isJWT);\n    if (!res.valid) {\n      const message = [\n        \"expirationDate is not valid: \" + JSON.stringify(res.warnings, null, 2),\n        \"expirationDate must be XML Datestring as defined in spec: https://w3c.github.io/vc-data-model/#expiration\"\n      ].join(\"\\n\");\n      if (strict == \"warn\") {\n        console.warn(message);\n      }\n      if (strict == \"throw\") {\n        throw new Error(message);\n      }\n    }\n  }\n};\n\nconst checkIssuer = (credential: VerifiableCredential) => {\n  // check issuer cardinality\n  if (jsonld.getValues(credential, \"issuer\").length > 1) {\n    throw new Error('\"issuer\" property can only have one value.');\n  }\n\n  // https://www.rfc-editor.org/rfc/rfc3986#page-50\n  const rfc3986Regex = new RegExp(\n    \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n  );\n  if (\"issuer\" in credential) {\n    const issuer = _getId(credential.issuer);\n    if (!issuer) {\n      throw new Error(\n        `Verifiable credentials issuer:object MUST have an id. See: https://www.w3.org/TR/vc-data-model/#issuer`\n      );\n    }\n    if (!rfc3986Regex.test(issuer)) {\n      throw new Error(\n        \"Verifiable credentials issuer:string MUST be a RFC3986 URI. See: https://www.w3.org/TR/vc-data-model/#issuer, https://www.rfc-editor.org/rfc/rfc3986\"\n      );\n    }\n    if (!issuer.includes(\":\")) {\n      throw new Error(`\"issuer\" id must be a URL: ${issuer}`);\n    }\n  }\n};\n\nconst checkCredentialStatus = (credential: VerifiableCredential) => {\n  if (\"credentialStatus\" in credential) {\n    if (!credential.credentialStatus.id) {\n      throw new Error('\"credentialStatus\" must include an id.');\n    }\n    if (!credential.credentialStatus.type) {\n      throw new Error('\"credentialStatus\" must include a type.');\n    }\n  }\n};\n\nconst checkEvidence = (credential: VerifiableCredential) => {\n  // check evidences are URLs\n  // FIXME\n  jsonld.getValues(credential, \"evidence\").forEach((evidence: any) => {\n    const evidenceId = _getId(evidence);\n    if (evidenceId && !evidenceId.includes(\":\")) {\n      throw new Error(`\"evidence\" id must be a URL: ${evidence}`);\n    }\n  });\n};\n\nconst checkId = (credential: VerifiableCredential) => {\n  // https://www.rfc-editor.org/rfc/rfc3986#page-50\n  const rfc3986Regex = new RegExp(\n    \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n  );\n  if (credential.id && !rfc3986Regex.test(credential.id)) {\n    throw new Error(\n      [\n        \"Verifiable credentials id (if exists) MUST be a RFC3986 URI.\",\n        \"See: https://www.w3.org/TR/vc-data-model/#dfn-id\"\n      ].join(\"\")\n    );\n  }\n};\n\nconst requireFields = (credential: any) => {\n  requireContext(credential);\n  requireType(credential);\n  requireCredentialSubject(credential);\n  requireIssuer(credential);\n  requireIssuanceDate(credential);\n};\n\nconst checkFields = (\n  credential: VerifiableCredential,\n  isJWT: boolean,\n  strict: \"ignore\" | \"warn\" | \"throw\"\n) => {\n  checkType(credential);\n  checkIssuanceDate(credential, isJWT, strict);\n  checkExpirationDate(credential, isJWT, strict);\n  checkIssuer(credential);\n  checkCredentialStatus(credential);\n  checkEvidence(credential);\n  checkId(credential);\n};\n\nexport const checkCredential = async (\n  credential: CredentialCheck,\n  options: {\n    documentLoader?: DocumentLoader;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader } = options;\n  const strict = options.strict || \"warn\";\n  if (options.strict === \"ignore\") {\n    return undefined;\n  }\n  const { isJWT, credential: newCredential } = handleJWT(credential);\n  credential = newCredential;\n\n  requireDocumentLoader(documentLoader);\n  requireFields(credential);\n  checkFields(credential as VerifiableCredential, isJWT, strict);\n  await checkValidJsonLd(\n    credential as VerifiableCredential,\n    (documentLoader as unknown) as (iri: string) => { document: any }\n  );\n\n  return undefined;\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nexport const { AssertionProofPurpose } = ldp.purposes;\n\nexport class CredentialIssuancePurpose extends AssertionProofPurpose {\n  constructor({ controller, date, maxTimestampDelta }: any = {}) {\n    super({ controller, date, maxTimestampDelta });\n  }\n\n  async validate(\n    proof: any,\n    { document, suite, verificationMethod, documentLoader, expansionMap }: any\n  ) {\n    try {\n      const result = await super.validate(proof, {\n        document,\n        suite,\n        verificationMethod,\n        documentLoader,\n        expansionMap\n      });\n\n      if (!result.valid) {\n        throw result.error;\n      }\n\n      const issuer =\n        typeof document.issuer === \"string\"\n          ? document.issuer\n          : document.issuer.id;\n\n      if (!issuer) {\n        throw new Error(\"Credential issuer is required.\");\n      }\n\n      if (result.controller.id !== issuer) {\n        throw new Error(\n          \"Credential issuer must match the verification method controller.\"\n        );\n      }\n\n      return { valid: true };\n    } catch (error) {\n      return { valid: false, error };\n    }\n  }\n}\n\nexport default CredentialIssuancePurpose;\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkCredential } from \"../checkCredential\";\nimport { CredentialIssuancePurpose } from \"./CredentialIssuancePurpose\";\n\nexport const createVerifiableCredential = async (options: {\n  credential: any;\n  suite: any;\n  documentLoader: any;\n  strict?: \"ignore\" | \"warn\" | \"throw\";\n}) => {\n  const { credential, suite, documentLoader } = options;\n\n  const strict = options.strict || \"warn\";\n\n  // run common credential checks\n  if (!credential) {\n    throw new TypeError('\"credential\" parameter is required for issuing.');\n  }\n\n  await checkCredential(credential, { documentLoader, strict });\n\n  if (!documentLoader) {\n    throw new TypeError('\"documentLoader\" parameter is required for issuing.');\n  }\n\n  if (!suite) {\n    throw new TypeError('\"suite\" parameter is required for issuing.');\n  }\n  // check to make sure the `suite` has required params\n  // Note: verificationMethod defaults to publicKey.id, in suite constructor...\n  // ...in some implementations...\n  if (!suite.verificationMethod) {\n    throw new TypeError('\"suite.verificationMethod\" property is required.');\n  }\n\n  const purpose = new CredentialIssuancePurpose();\n\n  return ldp.sign(credential, { purpose, ...options });\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkCredential } from \"../checkCredential\";\nimport { CredentialIssuancePurpose } from \"./CredentialIssuancePurpose\";\n\nexport const verifyVerifiableCredential = async (options: {\n  credential: any;\n  suite: any;\n  checkStatus?: any;\n  documentLoader: any;\n  expansionMap?: boolean;\n}) => {\n  const { credential, checkStatus, documentLoader } = options;\n  const compactProof = false;\n  if (options.expansionMap !== undefined) {\n    const message = \"The default options are not being used.\";\n    throw new Error(message);\n  }\n  try {\n    if (!credential) {\n      throw new TypeError('A \"credential\" property is required for verifying.');\n    }\n\n    // run common credential checks\n    await checkCredential(credential, { documentLoader });\n\n    // if credential status is provided, a `checkStatus` function must be given\n    if (\n      credential.credentialStatus &&\n      typeof options.checkStatus !== \"function\"\n    ) {\n      throw new TypeError(\n        'A \"checkStatus\" function must be given to verify credentials with ' +\n          '\"credentialStatus\".'\n      );\n    }\n\n    const purpose = new CredentialIssuancePurpose();\n\n    const result = await ldp.verify(credential, {\n      ...options,\n      purpose,\n      compactProof\n    });\n\n    // if verification has already failed, skip status check\n    if (!result.verified) {\n      return result;\n    }\n\n    if (credential.credentialStatus) {\n      result.statusResult = await checkStatus(options);\n      if (!result.statusResult.verified) {\n        result.verified = false;\n      }\n    }\n\n    return result;\n  } catch (error) {\n    return {\n      verified: false,\n      results: [{ credential, verified: false, error }],\n      error\n    };\n  }\n};\n","import jsonld from \"@transmute/jsonld\";\n// import constants from './constants';\n\nimport { checkCredential } from \"./checkCredential\";\nimport { check } from \"@transmute/jsonld-schema\";\n\nexport const checkPresentation = async (\n  presentation: any,\n  options: {\n    documentLoader: any;\n    strict: \"ignore\" | \"warn\" | \"throw\";\n    domain?: string;\n    challenge?: string;\n  }\n) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  if (typeof presentation === \"string\") {\n    let [encodedHeader, encodedPayload] = presentation.split(\".\");\n    const header = JSON.parse(Buffer.from(encodedHeader, \"base64\").toString());\n    if (!header.alg) {\n      throw new Error(\"alg is required in JWT header\");\n    }\n    const payload = JSON.parse(\n      Buffer.from(encodedPayload, \"base64\").toString()\n    );\n    presentation = payload.vp;\n    if (payload.aud) {\n      if (payload.aud !== domain) {\n        throw new Error(\n          '\"aud\" and \"domain\" does not match this verifiable presentation'\n        );\n      }\n    }\n    if (payload.nonce) {\n      if (payload.nonce !== challenge) {\n        throw new Error(\n          '\"nonce\" and \"challenge\" does not match this verifiable presentation'\n        );\n      }\n    }\n  }\n\n  if (!presentation[\"@context\"]) {\n    throw new Error(\n      \"Verifiable Presentations MUST include a @context property.\"\n    );\n  }\n\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for checking presentations.'\n    );\n  }\n\n  const isValidJsonLd = await check({ input: presentation, documentLoader });\n\n  if (!isValidJsonLd.ok) {\n    throw new Error(\n      `presentation is not valid JSON-LD: ${JSON.stringify(\n        isValidJsonLd.error,\n        null,\n        2\n      )}`\n    );\n  }\n\n  const types = jsonld.getValues(presentation, \"type\");\n\n  // check type presence\n  if (!types.includes(\"VerifiablePresentation\")) {\n    throw new Error('\"type\" must include \"VerifiablePresentation\".');\n  }\n\n  if (presentation.verifiableCredential) {\n    const credentials = Array.isArray(presentation.verifiableCredential)\n      ? presentation.verifiableCredential\n      : [presentation.verifiableCredential];\n\n    await Promise.all(\n      credentials.map(async (vc: any) => {\n        await checkCredential(vc, { documentLoader, strict });\n      })\n    );\n  }\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\nimport { checkPresentation } from \"../checkPresentation\";\nexport const createVerifiablePresentation = async (options: {\n  presentation: any;\n  suite: any;\n  domain?: string;\n  challenge: string;\n  documentLoader: (\n    iri: string\n  ) => Promise<{\n    document: any;\n  }>;\n  strict?: \"ignore\" | \"warn\" | \"throw\";\n}) => {\n  const { presentation, domain, challenge, documentLoader } = options;\n\n  const strict = options.strict || \"warn\";\n\n  await checkPresentation(presentation, { documentLoader, strict });\n\n  const purpose = new ldp.purposes.AuthenticationProofPurpose({\n    domain,\n    challenge\n  });\n\n  return ldp.sign(presentation, { ...options, purpose });\n};\n","import { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const getVerifierForJwt = async (jwt: string, options: any) => {\n  const [header] = jwt\n    .split(\".\")\n    .splice(0, 1)\n    .map((item: string) => {\n      return JSON.parse(Buffer.from(item, \"base64\").toString());\n    });\n  if (!header.kid) {\n    throw new Error(\n      'Transmute requires \"kid\" in vc-jwt headers. Otherwise key dereferencing is not always possible.'\n    );\n  }\n  let suite = Array.isArray(options.suite) ? options.suite[0] : options.suite;\n\n  const verificationMethod = await suite.getVerificationMethod({\n    proof: {\n      verificationMethod: header.kid\n    },\n    documentLoader: options.documentLoader,\n    instance: true // need this to get the class instance\n  });\n\n  if (!verificationMethod || !verificationMethod.useJwa) {\n    throw new Error(\n      'Transmute requires \"suite.getVerificationMethod\" to return a key instance with member useJwa.'\n    );\n  }\n  if (suite.key?.alg) {\n    verificationMethod.alg = suite.key.alg;\n  }\n  const k2 = await JsonWebKey.from(\n    await verificationMethod.export({ type: \"JsonWebKey2020\" }),\n    {\n      detached: false\n    }\n  );\n\n  const verifier = k2.verifier();\n  return verifier;\n};\n","export const decodeJwt = (jwt: string) => {\n  const [encodedHeader, encodedPayload, encodedSignature] = jwt.split(\".\");\n  const [header, payload] = [encodedHeader, encodedPayload].map(\n    (item: string) => {\n      return JSON.parse(Buffer.from(item, \"base64\").toString());\n    }\n  );\n  return {\n    header,\n    payload,\n    signature: encodedSignature\n  };\n};\n","import { checkCredential } from \"../checkCredential\";\n\nexport const verifyVerifiableCredential = async (\n  jwt: string,\n  options: {\n    verifier: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { verifier, documentLoader } = options;\n  const strict = options.strict || \"warn\";\n\n  await checkCredential(jwt, { documentLoader, strict });\n  const res = await verifier.verify({\n    signature: jwt\n  });\n  return res;\n};\n","import * as ldp from \"@transmute/linked-data-proof\";\n\nimport { checkPresentation } from \"../checkPresentation\";\nimport { PresentationVerification } from \"../types/PresentationVerification\";\nimport { verifyVerifiableCredential } from \"./verifyVerifiableCredential\";\nimport { getVerifierForJwt } from \"../vc-jwt/getVerifierForJwt\";\nimport { decodeJwt } from \"../vc-jwt/decodeJwt\";\nimport { verifyVerifiableCredential as verifyJwt } from \"../vc-jwt/verifyVerifiableCredential\";\nconst verifyCredentialsInPresentation = async (\n  presentation: any,\n  options: any\n) => {\n  let result: any = { verified: false };\n  const results = await Promise.all(\n    presentation.verifiableCredential.map(async (credential: any) => {\n      if (!credential[\"@context\"]) {\n        const verifier = await getVerifierForJwt(credential, options);\n        const res = await verifyJwt(credential, { ...options, verifier });\n        const decoded = decodeJwt(credential);\n        return {\n          credentialId: decoded.payload.vc.id || undefined,\n          verified: res\n        };\n      }\n      if (credential.credentialStatus && !options.checkStatus) {\n        throw new Error(\n          \"options.checkStatus is required to verify presentation of revocable credentials.\"\n        );\n      }\n      const res = await verifyVerifiableCredential({\n        credential,\n        ...options\n      });\n      return {\n        credentialId: credential.id,\n        ...res\n      };\n    })\n  );\n  result.verified = results.every((r: any) => r.verified);\n  result.results = results;\n  return result;\n};\n\nexport const verifyVerifiablePresentation = async (options: any) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  const { presentation } = options;\n\n  if (!documentLoader) {\n    throw new TypeError(\n      '\"documentLoader\" parameter is required for verifying.'\n    );\n  }\n\n  if (!presentation) {\n    throw new TypeError('A \"presentation\" property is required for verifying.');\n  }\n  try {\n    await checkPresentation(presentation, { documentLoader, strict });\n  } catch (e) {\n    return {\n      verified: false,\n      presentation: e\n    };\n  }\n\n  if (\n    (!presentation.proof && !presentation.verifiableCredential) ||\n    (presentation.verifiableCredential &&\n      presentation.verifiableCredential.length === 0)\n  ) {\n    const message =\n      'presentation MUST contain \"proof\" or \"verifiableCredential\"';\n    throw new Error(message);\n  }\n\n  if (!presentation.proof) {\n    const message = 'presentation MUST contain \"proof\" when strict';\n    if (strict == \"warn\") {\n      console.warn(message);\n    }\n    if (strict == \"throw\") {\n      throw new Error(message);\n    }\n  }\n\n  const result: PresentationVerification = {\n    verified: false\n  };\n\n  if (\n    presentation.verifiableCredential &&\n    presentation.verifiableCredential.length\n  ) {\n    const credentials = await verifyCredentialsInPresentation(\n      presentation,\n      options\n    );\n    result.credentials = credentials;\n    if (!credentials.verified) {\n      result.verified = false;\n    }\n  }\n\n  if (presentation.proof) {\n    const purpose = new ldp.purposes.AuthenticationProofPurpose({\n      domain,\n      challenge\n    });\n    const verification = await ldp.verify(presentation, {\n      ...options,\n      purpose\n    });\n    result.presentation = verification;\n  } else {\n    result.presentation = result.credentials;\n  }\n\n  if (result.presentation && !result.credentials) {\n    result.verified = result.presentation.verified;\n  }\n\n  if (result.presentation && result.credentials) {\n    result.verified =\n      result.presentation.verified && result.credentials.verified;\n  }\n  return result;\n};\n","import moment from \"moment\";\nimport { checkCredential } from \"../checkCredential\";\n\nexport const createVcPayload = async (\n  credential: any,\n  options: {\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader } = options;\n  const strict = options.strict || \"warn\";\n\n  if (!credential.issuer) {\n    throw new Error(\"Issuer is a required field.\");\n  }\n\n  await checkCredential(credential, { documentLoader, strict });\n\n  const issuer = credential.issuer.id\n    ? credential.issuer.id\n    : credential.issuer;\n  let subject = undefined;\n  if (\n    typeof credential.credentialSubject === \"string\" ||\n    credential.credentialSubject instanceof String\n  ) {\n    subject = credential.credentialSubject;\n  }\n  if (\n    typeof credential.credentialSubject === \"object\" &&\n    credential.credentialSubject !== null &&\n    credential.credentialSubject.id\n  ) {\n    subject = credential.credentialSubject.id;\n  }\n  const payload: any = {\n    iss: issuer,\n    sub: subject,\n    vc: credential,\n    jti: credential.id,\n    nbf: moment(credential.issuanceDate).unix()\n  };\n  if (credential.expirationDate) {\n    payload.exp = moment(credential.expirationDate).unix();\n  }\n  return payload;\n};\n","import { checkPresentation } from \"../checkPresentation\";\n\nexport const createVpPayload = async (\n  presentation: any,\n  options: {\n    documentLoader: any;\n    domain?: string;\n    challenge: string;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  if (!challenge) {\n    throw new Error(\n      '\"challenge\" is required to create verifiable presentations (it will be used for the \"nonce\" value)'\n    );\n  }\n\n  await checkPresentation(presentation, {\n    documentLoader,\n    strict,\n    domain,\n    challenge\n  });\n\n  const payload: any = {};\n\n  if (presentation.holder) {\n    const holder = presentation.holder.id\n      ? presentation.holder.id\n      : presentation.holder;\n\n    payload.iss = holder;\n    payload.sub = holder;\n  }\n\n  payload.vp = presentation;\n\n  if (domain) {\n    payload.aud = domain;\n  }\n\n  if (challenge) {\n    payload.nonce = challenge;\n  }\n  return payload;\n};\n","import { credential } from \"./credential\";\nimport { presentation } from \"./presentation\";\n\nimport { decodeJwt } from \"../vc-jwt/decodeJwt\";\n\nconst jwt = {\n  decode: decodeJwt\n};\n\nexport const verifiable = { credential, presentation, jwt };\n","import { create } from \"./create\";\nimport { derive } from \"./derive\";\nimport { verify } from \"./verify\";\n\nexport const credential = {\n  create,\n  derive,\n  verify\n};\n","import * as ld from \"../../vc-ld\";\nimport * as jwt from \"../../vc-jwt\";\n\nimport { CreateCredentialOptions, CreateCredentialResult } from \"../../types\";\nimport { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const create = async (\n  options: CreateCredentialOptions\n): Promise<CreateCredentialResult> => {\n  const result: CreateCredentialResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  if (options.format.includes(\"vc\")) {\n    result.items.push(\n      await ld.createVerifiableCredential({\n        credential: options.credential,\n        suite: options.suite,\n        documentLoader: options.documentLoader\n      })\n    );\n  }\n  if (options.format.includes(\"vc-jwt\")) {\n    const suite = Array.isArray(options.suite)\n      ? options.suite[0]\n      : options.suite;\n    const { key } = suite;\n    if (!key || !key.useJwa) {\n      throw new Error(\n        \"Cannot create credential when suite does not contain a key that supports useJwa.\"\n      );\n    }\n    const k2 = await JsonWebKey.from(\n      await (key as any).export({ type: \"JsonWebKey2020\", privateKey: true }),\n      {\n        detached: false,\n        header: {\n          kid: key.id\n        }\n      }\n    );\n    const signer = k2.signer();\n    const payload: any = await jwt.createVcPayload(options.credential, options);\n    result.items.push(await signer.sign({ data: payload }));\n  }\n  return result;\n};\n","import { DeriveCredentialOptions, DeriveCredentialResult } from \"../../types\";\n\nexport const derive = async (\n  options: DeriveCredentialOptions\n): Promise<DeriveCredentialResult> => {\n  const result: DeriveCredentialResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  const { credential, frame, suite, documentLoader } = options;\n\n  const { proof, ...document } = credential;\n\n  if (!suite.deriveProof) {\n    throw new Error(\"Suite requires deriveProof\");\n  }\n\n  const derivationResult = await suite.deriveProof({\n    document: document,\n    proof: { ...proof, \"@context\": document[\"@context\"] },\n    revealDocument: frame,\n    documentLoader\n  });\n  const derivedCredential = {\n    ...derivationResult.document,\n    proof: derivationResult.proof\n  };\n  delete derivedCredential.proof[\"@context\"];\n  result.items.push(derivedCredential);\n  return result;\n};\n","import * as ld from \"../../vc-ld\";\nimport { VerifyCredentialOptions, VerificationResult } from \"../../types\";\nimport { VerifiableCredential } from \"../../types/VerifiableCredential\";\nimport { getVerifierForJwt } from \"../../vc-jwt/getVerifierForJwt\";\nimport { decodeJwt } from \"../../vc-jwt/decodeJwt\";\nimport moment from \"moment\";\nexport const verify = async (\n  options: VerifyCredentialOptions\n): Promise<VerificationResult> => {\n  let credential: VerifiableCredential = options.credential as VerifiableCredential;\n  const result: VerificationResult = {\n    verified: false,\n    verifications: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vc\"];\n  }\n\n  if (\n    options.format.includes(\"vc\") &&\n    (options.credential as any)[\"@context\"]\n  ) {\n    const res = await ld.verifyVerifiableCredential({\n      credential: options.credential,\n      suite: options.suite,\n      documentLoader: options.documentLoader,\n      checkStatus: options.checkStatus,\n      expansionMap: options.expansionMap\n    });\n    result.verified = res.verified;\n    if (!result.verified) {\n      result.error = [];\n      if (res && res.statusResult && !res.statusResult.verified) {\n        result.error.push({\n          statusResult: res.statusResult\n        });\n      }\n      if (res && res.results[0] && !res.results[0].verified) {\n        if (\n          (res.results[0].error,\n          res.results[0].error.message.indexOf(\"Invalid JSON-LD\") >= 0)\n        ) {\n          result.error.push(\n            \"This credential contains invalid JSON-LD allowing it to be mutable.\"\n          );\n        }\n        result.error.push({ proofResult: res.results[0].verified });\n      }\n      if (res.error) {\n        result.error.push(res.error);\n      }\n    }\n  }\n\n  // vc-jwt's are strings with an encoded vc member that conforms to the data model\n  let jwtVerificationMethod: string = \"\";\n  if (\n    options.format.includes(\"vc-jwt\") &&\n    !(options.credential as VerifiableCredential)[\"@context\"]\n  ) {\n    const verifier = await getVerifierForJwt(\n      options.credential as string,\n      options\n    );\n\n    const verified = await verifier.verify({\n      signature: options.credential\n    });\n    result.verified = verified;\n\n    const decodedString = decodeJwt(options.credential as string);\n    credential = decodedString.payload.vc as VerifiableCredential;\n    jwtVerificationMethod =\n      decodedString?.header?.kid ??\n      (typeof decodedString.payload.vc.issuer === \"object\"\n        ? decodedString.payload.vc.issuer.id\n        : decodedString.payload.vc.issuer);\n  }\n\n  // Signature\n  const proofCheckFailed = !!(\n    result.error &&\n    result.error.find((e: any) => e?.proofResult?.verified === false)\n  );\n\n  if (!result.verified && proofCheckFailed) {\n    const description = \"This credential has a invalid signature\";\n    result.verifications.push({\n      status: \"bad\",\n      title: \"Proof\",\n      description\n    });\n  } else {\n    result.verifications.push({\n      status: \"good\",\n      title: \"Proof\",\n      description:\n        (options.credential as VerifiableCredential).proof\n          ?.verificationMethod ?? jwtVerificationMethod\n    });\n  }\n\n  // Activation\n  if (credential.issuanceDate) {\n    const now = moment();\n    const issuanceDate = moment(credential.issuanceDate);\n    if (now.isAfter(issuanceDate)) {\n      result.verifications.push({\n        status: \"good\",\n        title: \"Activation\",\n        description: `This credential activated ${issuanceDate.fromNow()}`\n      });\n    } else {\n      result.verifications.push({\n        status: \"bad\",\n        title: \"Activation\",\n        description: `This credential activates ${issuanceDate.fromNow()}`\n      });\n    }\n  }\n\n  // Expiration\n  if (credential.expirationDate) {\n    const now = moment();\n    const expirationDate = moment(credential.expirationDate);\n    if (now.isBefore(expirationDate)) {\n      result.verifications.push({\n        status: \"good\",\n        title: \"Expired\",\n        description: `This credential expires ${expirationDate.fromNow()}`\n      });\n    } else {\n      result.verifications.push({\n        status: \"bad\",\n        title: \"Expired\",\n        description: `This credential expired ${expirationDate.fromNow()}`\n      });\n    }\n  }\n\n  // Revocation Status\n  if (credential.credentialStatus) {\n    const statusCheckFailed = !!(\n      result.error &&\n      result.error.find((e: any) => e?.statusResult?.verified === false)\n    );\n    if (!result.verified && statusCheckFailed) {\n      result.verifications.push({\n        status: \"bad\",\n        title: \"Revocation\",\n        description: \"This credential has been revoked.\"\n      });\n    } else {\n      result.verifications.push({\n        status: \"good\",\n        title: \"Revocation\",\n        description: \"This credential has not been revoked.\"\n      });\n    }\n  }\n\n  return result;\n};\n","import { create } from \"./create\";\nimport { verify } from \"./verify\";\n\nexport const presentation = {\n  create,\n  verify\n};\n","import * as ld from \"../../vc-ld\";\nimport * as jwt from \"../../vc-jwt\";\nimport {\n  CreateVerifiablePresentationOptions,\n  CreatePresentationResult\n} from \"../../types\";\nimport { JsonWebKey } from \"@transmute/json-web-signature\";\nexport const create = async (\n  options: CreateVerifiablePresentationOptions\n): Promise<CreatePresentationResult> => {\n  const result: CreatePresentationResult = {\n    items: []\n  };\n\n  if (!options.format) {\n    options.format = [\"vp\"];\n  }\n\n  if (options.format.includes(\"vp\")) {\n    result.items.push(\n      await ld.createVerifiablePresentation({\n        presentation: options.presentation,\n        suite: options.suite,\n        domain: options.domain,\n        challenge: options.challenge,\n        documentLoader: options.documentLoader\n      })\n    );\n  }\n  if (options.format.includes(\"vp-jwt\")) {\n    const suite = Array.isArray(options.suite)\n      ? options.suite[0]\n      : options.suite;\n\n    const { key } = suite;\n\n    if (!key || !key.useJwa) {\n      throw new Error(\n        \"Cannot create credential when suite does not contain a key that supports useJwa.\"\n      );\n    }\n    const k2 = await JsonWebKey.from(\n      await (key as any).export({ type: \"JsonWebKey2020\", privateKey: true }),\n      {\n        detached: false,\n        header: {\n          kid: key.id\n        }\n      }\n    );\n    const signer = k2.signer();\n    const payload: any = await jwt.createVpPayload(\n      options.presentation,\n      options\n    );\n    result.items.push(await signer.sign({ data: payload }));\n  }\n\n  return result;\n};\n","import * as ld from \"../../vc-ld\";\n\nimport { VerifyPresentationOptions, VerificationResult } from \"../../types\";\nimport { getVerifierForJwt } from \"../../vc-jwt/getVerifierForJwt\";\n\nexport const verify = async (\n  options: VerifyPresentationOptions\n): Promise<VerificationResult> => {\n  const result: any = {\n    verified: false\n  };\n\n  if (!options.format) {\n    options.format = [\"vp\"];\n  }\n\n  if (\n    options.format.includes(\"vp\") &&\n    (options.presentation as any)[\"@context\"]\n  ) {\n    return ld.verifyVerifiablePresentation({\n      presentation: options.presentation,\n      suite: options.suite,\n      domain: options.domain,\n      challenge: options.challenge,\n      checkStatus: options.checkStatus,\n      documentLoader: options.documentLoader\n    });\n  }\n\n  // vp-jwt's are strings with an encoded vp member that conforms to the data model\n  if (\n    options.format.includes(\"vp-jwt\") &&\n    !(options.presentation as any)[\"@context\"]\n  ) {\n    const verifier = await getVerifierForJwt(\n      options.presentation as string,\n      options\n    );\n    const verified = await verifier.verify({\n      signature: options.presentation\n    });\n    result.verified = verified;\n  }\n\n  return result;\n};\n","import { createVcPayload } from \"./createVcPayload\";\n\nexport const createVerifiableCredential = async (\n  credential: any,\n  options: {\n    signer: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { signer } = options;\n  const payload: any = await createVcPayload(credential, options);\n  const jwt = await signer.sign({ data: payload });\n  return jwt;\n};\n","import { createVpPayload } from \"./createVpPayload\";\n\nexport const createVerifiablePresentation = async (\n  presentation: any,\n  options: {\n    domain?: string;\n    challenge: string;\n    signer: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { signer } = options;\n  const payload = await createVpPayload(presentation, options);\n  const jwt = await signer.sign({ data: payload });\n  return jwt;\n};\n","import { checkPresentation } from \"../checkPresentation\";\n\nexport const verifyVerifiablePresentation = async (\n  jwt: string,\n  options: {\n    domain?: string;\n    challenge: string;\n    verifier: any;\n    documentLoader: any;\n    strict?: \"ignore\" | \"warn\" | \"throw\";\n  }\n) => {\n  const { verifier, documentLoader, domain, challenge } = options;\n  const strict = options.strict || \"warn\";\n\n  await checkPresentation(jwt, { documentLoader, strict, domain, challenge });\n  const res = await verifier.verify({\n    signature: jwt\n  });\n  return res;\n};\n"],"names":["xmlDateSchemaRegex","ISO_8601_FULL","TIME_ZONE_OFFSET_MATCH","checkDate","datetime","isJWT","res","valid","warnings","test","push","moment","suppressDeprecationWarnings","newDatetime","isLeapSecond","split","substring","replace","newDate","Date","setSeconds","getSeconds","toISOString","err","getMilliseconds","length","_getId","obj","id","checkCredential","credential","options","documentLoader","strict","undefined","credentialObj","encodedPayload","JSON","parse","Buffer","from","toString","alg","Error","vc","handleJWT","TypeError","requireDocumentLoader","join","requireContext","requireType","requireCredentialSubject","requireIssuer","requireIssuanceDate","requireFields","jsonld","getValues","includes","checkType","issuanceDate","message","stringify","console","warn","checkIssuanceDate","expirationDate","checkExpirationDate","rfc3986Regex","RegExp","issuer","checkIssuer","credentialStatus","type","checkCredentialStatus","forEach","evidence","evidenceId","checkEvidence","checkId","checkFields","check","input","isValidJsonLd","ok","error","checkValidJsonLd","_catch","body","recover","result","e","then","Symbol","iterator","asyncIterator","CredentialIssuancePurpose","_AssertionProofPurpos","controller","date","maxTimestampDelta","validate","proof","document","suite","verificationMethod","expansionMap","ldp","AssertionProofPurpose","createVerifiableCredential","purpose","verifyVerifiableCredential","checkStatus","compactProof","verified","statusResult","results","checkPresentation","presentation","domain","challenge","payload","vp","aud","nonce","verifiableCredential","credentials","Array","isArray","Promise","all","map","createVerifiablePresentation","AuthenticationProofPurpose","getVerifierForJwt","jwt","header","splice","item","kid","getVerificationMethod","instance","useJwa","key","_suite$key","JsonWebKey","detached","k2","verifier","decodeJwt","encodedSignature","signature","verify","verifyVerifiablePresentation","verification","credentialId","verifyJwt","decoded","every","r","verifyCredentialsInPresentation","createVcPayload","subject","credentialSubject","String","iss","sub","jti","nbf","unix","exp","createVpPayload","holder","verifiable","create","format","privateKey","signer","items","_result$items2","sign","data","_result$items3","ld","derive","frame","deriveProof","revealDocument","derivationResult","derivedCredential","proofCheckFailed","find","proofResult","verifications","status","title","description","_options$credential$p2","jwtVerificationMethod","now","isAfter","fromNow","isBefore","statusCheckFailed","decodedString","_decodedString$header2","indexOf","decode"],"mappings":"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"}